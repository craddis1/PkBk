"(D1^4*Pk1*Pk2*(2*(beta10*f^2*k1^2*k2^2*(62*k1^4 + 369*k1^2*k2^2 + 56*k2^4) + 14*b1^2*(beta10*(8*k1^6*k2^2 + 43*k1^4*k2^4 + 5*k1^2*k2^6) + 4*((beta8 + 2*beta9)*k1^2*k2^2 + f*gr2*(k1^2 + k2^2)^2)*k3^4) + k3^2*(28*(-2*b2 + g2)*gr1^2*k1^2*k2^2*k3^2 + 2*f^3*gr2*(20*k1^4 + 33*k1^2*k2^2 + 15*k2^4)*k3^2 - f*gr1*(2*(73 + 12*C)*gr1*k1^4*k2^2 + (137 + 15*C)*gr1*k1^2*k2^4 - beta19*(2*(73 + 12*C)*k1^4*k2^2 + (137 + 15*C)*k1^2*k2^4) + ((74*beta15 + 87*beta16 + 66*beta18)*k1^2*k2^2 + 10*beta17*(4*k1^4 + 3*k2^4) + beta14*(48*k1^4 + 39*k2^4))*k3^2) + f^2*(gr2*(48*k1^6 + 2*(133 + 24*C)*k1^4*k2^2 + 10*(23 + 3*C)*k1^2*k2^4 + 30*k2^6) + k1^2*k2^2*(37*beta6*(k1^2 + k2^2) + 37*beta7*(k1^2 + k2^2) + (37*beta11 + 33*(beta8 + 2*beta9 - 2*gr1^2))*k3^2))) + b1*(beta10*f*k1^2*k2^2*(170*k1^4 + 961*k1^2*k2^2 + 134*k2^4) + k3^2*(7*beta19*(25 + 4*C)*gr1*k1^2*k2^2*(k1^2 + k2^2) + 6*f^2*gr2*(16*k1^4 + 29*k1^2*k2^2 + 13*k2^4)*k3^2 - gr1*((91*beta15 + 112*beta16 + 87*beta18 + 98*gr1 + 14*gr1*K)*k1^2*k2^2 + 56*beta14*(k1^4 + k2^4) + beta17*(48*k1^4 + 39*k2^4))*k3^2 + f*(k1^2*k2^2*(91*beta6*(k1^2 + k2^2) + 91*beta7*(k1^2 + k2^2) + (91*beta11 + 87*(beta8 + 2*beta9 - gr1^2))*k3^2) + 7*gr2*(k1^2 + k2^2)*(8*k1^4 + 5*k2^2*(k2^2 + k3^2) + k1^2*((37 + 8*C)*k2^2 + 8*k3^2))))))*Cos[theta] + k2*(k1*(28*b1^2*(beta10*(10*k1^4*k2^2 + 19*k1^2*k2^4) + 3*((beta13 + beta9)*k2^2 + f*gr2*(k1^2 + k2^2))*k3^4) + f*(11*beta10*f*k1^2*k2^2*(28*k1^2 + 29*k2^2) - 4*k3^2*(-48*f*gr2*k1^4 + 24*C*f*gr2*k1^4 - 23*beta6*f*k1^2*k2^2 - 24*beta7*f*k1^2*k2^2 + 2*beta7*C*f*k1^2*k2^2 - 96*f*gr2*k1^2*k2^2 + 4*C*f*gr2*k1^2*k2^2 + beta6*f*K*k1^2*k2^2 - 48*f*gr2*k2^4 - 12*C*f*gr2*k2^4 - 4*beta19*gr1*(3*k1^4 - (-18 + C)*k1^2*k2^2 + 3*k2^4) - 11*beta12*f*k1^2*k3^2 - 9*beta13*f*k1^2*k3^2 - 9*beta9*f*k1^2*k3^2 - 18*f^2*gr2*k1^2*k3^2 - 28*g2*gr2*k1^2*k3^2 - 11*beta12*f*k2^2*k3^2 - 10*beta13*f*k2^2*k3^2 - 10*beta9*f*k2^2*k3^2 - 21*b2*gr2*k2^2*k3^2 - 20*f^2*gr2*k2^2*k3^2 + 14*g2*gr2*k2^2*k3^2 + gr1*(11*beta16*k1^2 + 9*beta17*k1^2 + 9*beta18*k1^2 + 11*beta16*k2^2 + 10*beta17*k2^2 + 10*beta18*k2^2 + 11*beta14*(k1^2 + k2^2) + 12*beta15*(k1^2 + k2^2))*k3^2 + gr1^2*(12*k1^4 + 2*k2^2*(6*k2^2 + 5*f*k3^2) + k1^2*(-4*(-18 + C)*k2^2 + 9*f*k3^2)))) + 4*b1*(9*beta10*f*k1^2*k2^2*(17*k1^2 + 23*k2^2) + k3^2*(14*beta19*gr1*(k1^4 - (-6 + C)*k1^2*k2^2 + k2^4) + 3*f^2*gr2*(11*k1^2 + 17*k2^2)*k3^2 - gr1*(21*beta16*k1^2 + 11*beta18*k1^2 + 14*gr1*k1^2 + 21*beta14*k2^2 + 18*beta17*k2^2 + 11*beta18*k2^2 + 14*gr1*k2^2 + 14*beta15*(k1^2 + k2^2))*k3^2 + f*(56*beta7*k1^2*k2^2 - 14*beta7*C*k1^2*k2^2 - 7*beta6*(-7 + K)*k1^2*k2^2 + 21*beta12*k1^2*k3^2 + 11*beta13*k1^2*k3^2 + 11*beta9*k1^2*k3^2 - 11*gr1^2*k1^2*k3^2 + 21*beta12*k2^2*k3^2 + 29*beta13*k2^2*k3^2 + 29*beta9*k2^2*k3^2 - 11*gr1^2*k2^2*k3^2 - 7*gr2*(4*(-2 + C)*k1^4 + 2*k1^2*((-8 + C)*k2^2 + (-1 + K)*k3^2) - k2^2*(2*(4 + C)*k2^2 + (5 + K)*k3^2))))))*Cos[2*theta] + k2*(28*b1^2*beta10*k1^2*k2^2*(5*k1^2 + 3*k2^2) + beta10*f^2*k1^2*(36*k1^4 + 211*k1^2*k2^2 + 44*k2^4) + k3^2*(92*beta19*f*gr1*k1^4 - 48*beta19*C*f*gr1*k1^4 - 92*f*gr1^2*k1^4 + 48*C*f*gr1^2*k1^4 + 140*f^2*gr2*k1^4 - 96*C*f^2*gr2*k1^4 + 101*beta19*f*gr1*k1^2*k2^2 - 21*beta19*C*f*gr1*k1^2*k2^2 - 101*f*gr1^2*k1^2*k2^2 + 21*C*f*gr1^2*k1^2*k2^2 + 194*f^2*gr2*k1^2*k2^2 - 42*C*f^2*gr2*k1^2*k2^2 + 36*f^2*gr2*k2^4 + 22*beta6*f^2*k1^2*(k1^2 + k2^2) + 22*beta7*f^2*k1^2*(k1^2 + k2^2) + 22*beta11*f^2*k1^2*k3^2 + 14*beta8*f^2*k1^2*k3^2 + 28*beta9*f^2*k1^2*k3^2 - 44*beta15*f*gr1*k1^2*k3^2 - 18*beta16*f*gr1*k1^2*k3^2 - 28*beta18*f*gr1*k1^2*k3^2 - 28*f^2*gr1^2*k1^2*k3^2 - 56*g2*gr1^2*k1^2*k3^2 + 28*f^3*gr2*k1^2*k3^2 - 18*beta14*f*gr1*k2^2*k3^2 - 20*beta17*f*gr1*k2^2*k3^2 + 20*f^3*gr2*k2^2*k3^2) + b1*(beta10*f*k1^2*(44*k1^4 + 373*k1^2*k2^2 + 116*k2^4) + 2*k3^2*(49*beta19*gr1*k1^4 - 28*beta19*C*gr1*k1^4 + 77*f*gr2*k1^4 - 56*C*f*gr2*k1^4 + 49*beta19*gr1*k1^2*k2^2 - 28*beta19*C*gr1*k1^2*k2^2 + 98*f*gr2*k1^2*k2^2 - 56*C*f*gr2*k1^2*k2^2 + 21*f*gr2*k2^4 + 21*beta6*f*k1^2*(k1^2 + k2^2) + 21*beta7*f*k1^2*(k1^2 + k2^2) + 21*beta11*f*k1^2*k3^2 + 9*beta8*f*k1^2*k3^2 + 18*beta9*f*k1^2*k3^2 - 21*beta15*gr1*k1^2*k3^2 - 9*beta18*gr1*k1^2*k3^2 - 14*gr1^2*k1^2*k3^2 - 9*f*gr1^2*k1^2*k3^2 + 21*f*gr2*k1^2*k3^2 + 18*f^2*gr2*k1^2*k3^2 + 14*gr1^2*K*k1^2*k3^2 - 9*beta17*gr1*k2^2*k3^2 + 21*f*gr2*k2^2*k3^2 + 18*f^2*gr2*k2^2*k3^2)))*Cos[3*theta] + k1*(616*b1^2*beta10*k1^4*k2^2 + 877*b1*beta10*f*k1^4*k2^2 + 295*beta10*f^2*k1^4*k2^2 + 343*b1^2*beta10*k1^2*k2^4 + 643*b1*beta10*f*k1^2*k2^4 + 268*beta10*f^2*k1^2*k2^4 + 56*b1*beta19*gr1*k1^4*k3^2 + 48*beta19*f*gr1*k1^4*k3^2 - 48*f*gr1^2*k1^4*k3^2 + 224*b1*f*gr2*k1^4*k3^2 + 112*b1*C*f*gr2*k1^4*k3^2 + 192*f^2*gr2*k1^4*k3^2 + 96*C*f^2*gr2*k1^4*k3^2 + 231*b1*beta6*f*k1^2*k2^2*k3^2 + 182*b1*beta7*f*k1^2*k2^2*k3^2 + 98*b1*beta7*C*f*k1^2*k2^2*k3^2 + 89*beta6*f^2*k1^2*k2^2*k3^2 + 74*beta7*f^2*k1^2*k2^2*k3^2 + 30*beta7*C*f^2*k1^2*k2^2*k3^2 + 294*b1*beta19*gr1*k1^2*k2^2*k3^2 + 98*b1*beta19*C*gr1*k1^2*k2^2*k3^2 + 235*beta19*f*gr1*k1^2*k2^2*k3^2 + 60*beta19*C*f*gr1*k1^2*k2^2*k3^2 - 235*f*gr1^2*k1^2*k2^2*k3^2 - 60*C*f*gr1^2*k1^2*k2^2*k3^2 + 406*b1*f*gr2*k1^2*k2^2*k3^2 + 98*b1*C*f*gr2*k1^2*k2^2*k3^2 + 322*f^2*gr2*k1^2*k2^2*k3^2 + 60*C*f^2*gr2*k1^2*k2^2*k3^2 + 49*b1*beta6*f*K*k1^2*k2^2*k3^2 + 15*beta6*f^2*K*k1^2*k2^2*k3^2 + 56*b1*beta19*gr1*k2^4*k3^2 + 39*beta19*f*gr1*k2^4*k3^2 - 39*f*gr1^2*k2^4*k3^2 + 182*b1*f*gr2*k2^4*k3^2 - 14*b1*C*f*gr2*k2^4*k3^2 + 138*f^2*gr2*k2^4*k3^2 - 12*C*f^2*gr2*k2^4*k3^2 + 112*b1^2*beta13*k1^2*k3^4 + 112*b1^2*beta9*k1^2*k3^4 + 140*b1*beta12*f*k1^2*k3^4 + 148*b1*beta13*f*k1^2*k3^4 + 148*b1*beta9*f*k1^2*k3^4 + 52*beta12*f^2*k1^2*k3^4 + 44*beta13*f^2*k1^2*k3^4 + 44*beta9*f^2*k1^2*k3^4 - 112*b1*beta14*gr1*k1^2*k3^4 - 56*b1*beta15*gr1*k1^2*k3^4 - 28*b1*beta16*gr1*k1^2*k3^4 - 96*b1*beta17*gr1*k1^2*k3^4 - 52*b1*beta18*gr1*k1^2*k3^4 - 52*beta14*f*gr1*k1^2*k3^4 - 48*beta15*f*gr1*k1^2*k3^4 - 52*beta16*f*gr1*k1^2*k3^4 - 44*beta17*f*gr1*k1^2*k3^4 - 44*beta18*f*gr1*k1^2*k3^4 - 56*b1*gr1^2*k1^2*k3^4 - 52*b1*f*gr1^2*k1^2*k3^4 - 44*f^2*gr1^2*k1^2*k3^4 + 168*b1*f*gr2*k1^2*k3^4 + 140*b1^2*f*gr2*k1^2*k3^4 + 112*b2*f*gr2*k1^2*k3^4 + 252*b1*f^2*gr2*k1^2*k3^4 + 88*f^3*gr2*k1^2*k3^4 - 112*f*g2*gr2*k1^2*k3^4 + 56*b1*f*gr2*K*k1^2*k3^4 + 28*b1^2*beta13*k2^2*k3^4 + 28*b1^2*beta9*k2^2*k3^4 + 140*b1*beta12*f*k2^2*k3^4 + 76*b1*beta13*f*k2^2*k3^4 + 76*b1*beta9*f*k2^2*k3^4 + 52*beta12*f^2*k2^2*k3^4 + 36*beta13*f^2*k2^2*k3^4 + 36*beta9*f^2*k2^2*k3^4 - 28*b1*beta14*gr1*k2^2*k3^4 - 56*b1*beta15*gr1*k2^2*k3^4 - 112*b1*beta16*gr1*k2^2*k3^4 - 24*b1*beta17*gr1*k2^2*k3^4 - 52*b1*beta18*gr1*k2^2*k3^4 - 52*beta14*f*gr1*k2^2*k3^4 - 39*beta15*f*gr1*k2^2*k3^4 - 52*beta16*f*gr1*k2^2*k3^4 - 36*beta17*f*gr1*k2^2*k3^4 - 36*beta18*f*gr1*k2^2*k3^4 - 56*b1*gr1^2*k2^2*k3^4 - 52*b1*f*gr1^2*k2^2*k3^4 - 36*f^2*gr1^2*k2^2*k3^4 + 63*b1*f*gr2*k2^2*k3^4 + 140*b1^2*f*gr2*k2^2*k3^4 + 28*b2*f*gr2*k2^2*k3^4 + 180*b1*f^2*gr2*k2^2*k3^4 + 72*f^3*gr2*k2^2*k3^4 + 14*f*g2*gr2*k2^2*k3^4 - 7*b1*f*gr2*K*k2^2*k3^4 + k2^2*(21*b1^2*beta10*k1^2*k2^2 + beta10*f^2*k1^2*(37*k1^2 + 52*k2^2) + b1*beta10*f*k1^2*(47*k1^2 + 65*k2^2) + f*k3^2*(-22*beta7*(-1 + C)*f*k1^2 + 53*beta19*gr1*k1^2 - 44*beta19*C*gr1*k1^2 - 53*gr1^2*k1^2 + 44*C*gr1^2*k1^2 + 62*f*gr2*k1^2 - 44*C*f*gr2*k1^2 - 11*beta6*f*(-1 + K)*k1^2 + 9*beta19*gr1*k2^2 - 9*gr1^2*k2^2 + 54*f*gr2*k2^2 - 36*C*f*gr2*k2^2 + 4*beta13*f*k3^2 + 4*beta9*f*k3^2 - 9*beta15*gr1*k3^2 - 4*beta17*gr1*k3^2 - 4*beta18*gr1*k3^2 - 4*f*gr1^2*k3^2 + 8*f^2*gr2*k3^2 + 42*g2*gr2*k3^2) - 21*b1*k3^2*(2*beta7*(-1 + C)*f*k1^2 - 2*beta19*gr1*k1^2 + 2*beta19*C*gr1*k1^2 - 2*f*gr2*k1^2 + 2*C*f*gr2*k1^2 + beta6*f*(-1 + K)*k1^2 - 2*f*gr2*k2^2 + 2*C*f*gr2*k2^2 - f*gr2*k3^2 + f*gr2*K*k3^2))*Cos[4*theta] + f*k1*k2^3*(9*b1*beta10*k1^2 + beta10*f*(11*k1^2 + 4*k2^2) - 9*(-1 + C)*(beta19*gr1 - gr1^2 + 2*f*gr2)*k3^2)*Cos[5*theta] + beta10*f^2*k1^2*k2^4*Cos[6*theta]))))\/(336*k1^3*k2^3*k3^4)"