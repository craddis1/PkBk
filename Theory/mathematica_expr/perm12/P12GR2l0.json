"(D1^4*Pk1*Pk2*((48*beta10*f^2*k1^2*k2^2*(4*k1^4 + 25*k1^2*k2^2 + 4*k2^4) + 140*b1^2*(beta10*(4*k1^6*k2^2 + 23*k1^4*k2^4 + 4*k1^2*k2^6) + k3^2*(3*beta6*k1^2*k2^2*(k1^2 + k2^2) + 3*beta7*k1^2*k2^2*(k1^2 + k2^2) + (2*(3*beta11 + beta8 + 2*beta9)*k1^2*k2^2 + (3 + f)*gr2*(k1^2 + k2^2)^2)*k3^2)) + 2*k3^2*(35*(-2*b2 + g2)*gr1^2*k1^3*k2^3*k3^2 + 6*f^3*gr2*(5*k1^4 + 9*k1^2*k2^2 + 5*k2^4)*k3^2 - f*gr1*k1*k2*(7*(19 + 3*C)*gr1*k1^2*k2^2*(k1^2 + k2^2) - 7*beta19*k1*k2*(k1 + k2)*(5*k1^2 + 3*(3 + C)*k1*k2 + 5*k2^2) + 2*(k1 + k2)*((35*beta15 + 42*beta16 + 27*beta18)*k1*k2 + 42*beta14*(k1^2 - k1*k2 + k2^2) + 30*beta17*(k1^2 - k1*k2 + k2^2))*k3^2) + f^2*(14*gr2*(k1^2 + k2^2)*(3*k1^4 + (14 + 3*C)*k1^2*k2^2 + 3*k2^4) + k1^2*k2^2*(35*beta6*(k1^2 + k2^2) + 35*beta7*(k1^2 + k2^2) + 2*(35*beta11 + 27*(beta8 + 2*beta9 - gr1^2*k1*k2))*k3^2))) + 7*b1*(8*beta10*f*k1^2*k2^2*(11*k1^4 + 67*k1^2*k2^2 + 11*k2^4) + k3^2*(24*f^2*gr2*(k1^2 + k2^2)^2*k3^2 - gr1*k1*k2*(-10*beta19*k1*k2*(k1 + k2)*(2*k1^2 + (3 + C)*k1*k2 + 2*k2^2) + (40*beta14*(k1^3 + k2^3) + 24*beta17*(k1^3 + k2^3) + k1*k2*(24*beta18*k1 + 24*beta18*k2 + 35*gr1*k1*k2 + 5*gr1*K*k1*k2 + 40*beta15*(k1 + k2) + 40*beta16*(k1 + k2)))*k3^2) + 4*f*(2*k1^2*k2^2*(5*beta6*(k1^2 + k2^2) + 5*beta7*(k1^2 + k2^2) + (10*beta11 + 6*beta8 + 12*beta9 - 3*gr1^2*k1*k2)*k3^2) + 5*gr2*(k1^2 + k2^2)*(k1^4 + k2^2*(k2^2 + k3^2) + k1^2*((5 + C)*k2^2 + k3^2))))))*Cos[theta] + k1*k2*(1540*b1^2*beta10*k1^4*k2^2 + 1666*b1*beta10*f*k1^4*k2^2 + 480*beta10*f^2*k1^4*k2^2 + 1540*b1^2*beta10*k1^2*k2^4 + 1666*b1*beta10*f*k1^2*k2^4 + 480*beta10*f^2*k1^2*k2^4 + 280*b1*f*gr2*k1^4*k3^2 + 140*b1*C*f*gr2*k1^4*k3^2 + 168*f^2*gr2*k1^4*k3^2 + 84*C*f^2*gr2*k1^4*k3^2 + 70*b1*beta19*gr1*k1^4*k2*k3^2 + 42*beta19*f*gr1*k1^4*k2*k3^2 - 42*f*gr1^2*k1^5*k2*k3^2 + 630*b1^2*beta6*k1^2*k2^2*k3^2 + 420*b1^2*beta7*k1^2*k2^2*k3^2 + 420*b1^2*beta7*C*k1^2*k2^2*k3^2 + 420*b1*beta6*f*k1^2*k2^2*k3^2 + 280*b1*beta7*f*k1^2*k2^2*k3^2 + 280*b1*beta7*C*f*k1^2*k2^2*k3^2 + 91*beta6*f^2*k1^2*k2^2*k3^2 + 70*beta7*f^2*k1^2*k2^2*k3^2 + 42*beta7*C*f^2*k1^2*k2^2*k3^2 + 560*b1*f*gr2*k1^2*k2^2*k3^2 + 280*b1*C*f*gr2*k1^2*k2^2*k3^2 + 308*f^2*gr2*k1^2*k2^2*k3^2 + 84*C*f^2*gr2*k1^2*k2^2*k3^2 + 210*b1^2*beta6*K*k1^2*k2^2*k3^2 + 140*b1*beta6*f*K*k1^2*k2^2*k3^2 + 21*beta6*f^2*K*k1^2*k2^2*k3^2 + 210*b1*beta19*gr1*k1^3*k2^2*k3^2 + 140*b1*beta19*C*gr1*k1^3*k2^2*k3^2 + 112*beta19*f*gr1*k1^3*k2^2*k3^2 + 42*beta19*C*f*gr1*k1^3*k2^2*k3^2 + 210*b1*beta19*gr1*k1^2*k2^3*k3^2 + 140*b1*beta19*C*gr1*k1^2*k2^3*k3^2 + 112*beta19*f*gr1*k1^2*k2^3*k3^2 + 42*beta19*C*f*gr1*k1^2*k2^3*k3^2 - 224*f*gr1^2*k1^3*k2^3*k3^2 - 84*C*f*gr1^2*k1^3*k2^3*k3^2 + 280*b1*f*gr2*k2^4*k3^2 + 140*b1*C*f*gr2*k2^4*k3^2 + 168*f^2*gr2*k2^4*k3^2 + 84*C*f^2*gr2*k2^4*k3^2 + 70*b1*beta19*gr1*k1*k2^4*k3^2 + 42*beta19*f*gr1*k1*k2^4*k3^2 - 42*f*gr1^2*k1*k2^5*k3^2 + 840*b1^2*beta12*k1^2*k3^4 + 280*b1^2*beta13*k1^2*k3^4 + 280*b1^2*beta9*k1^2*k3^4 + 560*b1*beta12*f*k1^2*k3^4 + 280*b1*beta13*f*k1^2*k3^4 + 280*b1*beta9*f*k1^2*k3^4 + 112*beta12*f^2*k1^2*k3^4 + 72*beta13*f^2*k1^2*k3^4 + 72*beta9*f^2*k1^2*k3^4 + 630*b1^2*gr2*k1^2*k3^4 + 420*b1*b2*gr2*k1^2*k3^4 + 210*b1*f*gr2*k1^2*k3^4 + 280*b1^2*f*gr2*k1^2*k3^4 + 140*b2*f*gr2*k1^2*k3^4 + 252*b1*f^2*gr2*k1^2*k3^4 + 72*f^3*gr2*k1^2*k3^4 - 420*b1*g2*gr2*k1^2*k3^4 - 140*f*g2*gr2*k1^2*k3^4 + 210*b1^2*gr2*K*k1^2*k3^4 + 70*b1*f*gr2*K*k1^2*k3^4 - 280*b1*beta14*gr1*k1^3*k3^4 - 168*b1*beta17*gr1*k1^3*k3^4 - 112*beta14*f*gr1*k1^3*k3^4 - 72*beta17*f*gr1*k1^3*k3^4 - 140*b1*beta15*gr1*k1^2*k2*k3^4 - 280*b1*beta16*gr1*k1^2*k2*k3^4 - 112*b1*beta18*gr1*k1^2*k2*k3^4 - 84*beta15*f*gr1*k1^2*k2*k3^4 - 112*beta16*f*gr1*k1^2*k2*k3^4 - 72*beta18*f*gr1*k1^2*k2*k3^4 - 70*b1*gr1^2*k1^3*k2*k3^4 - 56*b1*f*gr1^2*k1^3*k2*k3^4 - 36*f^2*gr1^2*k1^3*k2*k3^4 + 840*b1^2*beta12*k2^2*k3^4 + 280*b1^2*beta13*k2^2*k3^4 + 280*b1^2*beta9*k2^2*k3^4 + 560*b1*beta12*f*k2^2*k3^4 + 280*b1*beta13*f*k2^2*k3^4 + 280*b1*beta9*f*k2^2*k3^4 + 112*beta12*f^2*k2^2*k3^4 + 72*beta13*f^2*k2^2*k3^4 + 72*beta9*f^2*k2^2*k3^4 + 630*b1^2*gr2*k2^2*k3^4 + 420*b1*b2*gr2*k2^2*k3^4 + 210*b1*f*gr2*k2^2*k3^4 + 280*b1^2*f*gr2*k2^2*k3^4 + 140*b2*f*gr2*k2^2*k3^4 + 252*b1*f^2*gr2*k2^2*k3^4 + 72*f^3*gr2*k2^2*k3^4 - 420*b1*g2*gr2*k2^2*k3^4 - 140*f*g2*gr2*k2^2*k3^4 + 210*b1^2*gr2*K*k2^2*k3^4 + 70*b1*f*gr2*K*k2^2*k3^4 - 140*b1*beta15*gr1*k1*k2^2*k3^4 - 280*b1*beta16*gr1*k1*k2^2*k3^4 - 112*b1*beta18*gr1*k1*k2^2*k3^4 - 84*beta15*f*gr1*k1*k2^2*k3^4 - 112*beta16*f*gr1*k1*k2^2*k3^4 - 72*beta18*f*gr1*k1*k2^2*k3^4 - 280*b1*beta14*gr1*k2^3*k3^4 - 168*b1*beta17*gr1*k2^3*k3^4 - 112*beta14*f*gr1*k2^3*k3^4 - 72*beta17*f*gr1*k2^3*k3^4 - 70*b1*gr1^2*k1*k2^3*k3^4 - 56*b1*f*gr1^2*k1*k2^3*k3^4 - 36*f^2*gr1^2*k1*k2^3*k3^4 + 2*(35*b1^2*(10*beta10*k1^2*k2^2*(k1^2 + k2^2) + 3*k3^2*(-2*beta7*(-1 + C)*k1^2*k2^2 - beta6*(-1 + K)*k1^2*k2^2 - gr2*(-1 + K)*(k1^2 + k2^2)*k3^2)) + f*(222*beta10*f*k1^2*k2^2*(k1^2 + k2^2) + k3^2*(21*beta19*gr1*k1^4*k2 - 21*gr1^2*k1^5*k2 + 63*beta19*gr1*k1^3*k2^2 - 14*beta19*C*gr1*k1^3*k2^2 + 63*beta19*gr1*k1^2*k2^3 - 14*beta19*C*gr1*k1^2*k2^3 - 126*gr1^2*k1^3*k2^3 + 28*C*gr1^2*k1^3*k2^3 + 21*beta19*gr1*k1*k2^4 - 21*gr1^2*k1*k2^5 + 70*g2*gr2*k1^2*k3^2 - 28*beta14*gr1*k1^3*k3^2 - 24*beta17*gr1*k1^3*k3^2 - 42*beta15*gr1*k1^2*k2*k3^2 - 28*beta16*gr1*k1^2*k2*k3^2 - 24*beta18*gr1*k1^2*k2*k3^2 + 70*g2*gr2*k2^2*k3^2 - 42*beta15*gr1*k1*k2^2*k3^2 - 28*beta16*gr1*k1*k2^2*k3^2 - 24*beta18*gr1*k1*k2^2*k3^2 - 28*beta14*gr1*k2^3*k3^2 - 24*beta17*gr1*k2^3*k3^2 + 24*f^2*gr2*(k1^2 + k2^2)*k3^2 + f*(-14*beta7*(-3 + C)*k1^2*k2^2 - 7*beta6*(-5 + K)*k1^2*k2^2 - 14*gr2*(3*(-2 + C)*k1^4 + 2*(-6 + C)*k1^2*k2^2 + 3*(-2 + C)*k2^4) + 4*(7*beta12 + 6*beta13 + 6*beta9 - 3*gr1^2*k1*k2)*(k1^2 + k2^2)*k3^2))) + 7*b1*(72*beta10*f*k1^2*k2^2*(k1^2 + k2^2) + k3^2*(5*beta19*gr1*k1*k2*(k1 + k2)*(k1^2 - 2*(-1 + C)*k1*k2 + k2^2) + 6*f^2*gr2*(k1^2 + k2^2)*k3^2 + (30*g2*gr2*(k1^2 + k2^2) - gr1*k1*k2*(10*beta15*(k1 + k2) + 4*beta18*(k1 + k2) + 5*gr1*(k1^2 + k2^2)))*k3^2 + f*(20*beta7*k1^2*k2^2 - 20*beta7*C*k1^2*k2^2 - 10*beta6*(-1 + K)*k1^2*k2^2 + 4*beta13*k1^2*k3^2 + 4*beta9*k1^2*k3^2 - 2*gr1^2*k1^3*k2*k3^2 + 4*beta13*k2^2*k3^2 + 4*beta9*k2^2*k3^2 - 2*gr1^2*k1*k2^3*k3^2 - 5*gr2*(k1^2 + k2^2)*(2*(-2 + C)*k1^2 + 2*(-2 + C)*k2^2 + (-1 + K)*k3^2)))))*Cos[2*theta] + k1*k2*(140*b1^2*beta10*k1^2*k2^2 + 6*beta10*f^2*(8*k1^4 + 39*k1^2*k2^2 + 8*k2^4) + 2*k3^2*(56*f^2*gr2*k1^2 - 42*C*f^2*gr2*k1^2 + 7*beta19*f*gr1*k1^3 + 28*beta19*f*gr1*k1^2*k2 - 21*beta19*C*f*gr1*k1^2*k2 - 35*f*gr1^2*k1^3*k2 + 21*C*f*gr1^2*k1^3*k2 + 56*f^2*gr2*k2^2 - 42*C*f^2*gr2*k2^2 + 28*beta19*f*gr1*k1*k2^2 - 21*beta19*C*f*gr1*k1*k2^2 + 7*beta19*f*gr1*k2^3 - 35*f*gr1^2*k1*k2^3 + 21*C*f*gr1^2*k1*k2^3 + 7*beta6*f^2*(k1^2 + k2^2) + 7*beta7*f^2*(k1^2 + k2^2) + 14*beta11*f^2*k3^2 + 6*beta8*f^2*k3^2 + 12*beta9*f^2*k3^2 + 6*f^3*gr2*k3^2 - 14*beta15*f*gr1*k1*k3^2 - 6*beta18*f*gr1*k1*k3^2 - 14*beta15*f*gr1*k2*k3^2 - 6*beta18*f*gr1*k2*k3^2 - 6*f^2*gr1^2*k1*k2*k3^2 - 35*g2*gr1^2*k1*k2*k3^2) + 7*b1*(8*beta10*f*(k1^4 + 5*k1^2*k2^2 + k2^4) + 5*k3^2*(-4*(-1 + C)*f*gr2*(k1^2 + k2^2) + gr1*k1*k2*(-2*beta19*(-1 + C)*(k1 + k2) + gr1*(-1 + K)*k3^2))))*Cos[3*theta] + 14*b1*beta10*f*k1^4*k2^2*Cos[4*theta] + 36*beta10*f^2*k1^4*k2^2*Cos[4*theta] + 14*b1*beta10*f*k1^2*k2^4*Cos[4*theta] + 36*beta10*f^2*k1^2*k2^4*Cos[4*theta] + 7*beta6*f^2*k1^2*k2^2*k3^2*Cos[4*theta] + 14*beta7*f^2*k1^2*k2^2*k3^2*Cos[4*theta] - 14*beta7*C*f^2*k1^2*k2^2*k3^2*Cos[4*theta] + 28*f^2*gr2*k1^2*k2^2*k3^2*Cos[4*theta] - 28*C*f^2*gr2*k1^2*k2^2*k3^2*Cos[4*theta] - 7*beta6*f^2*K*k1^2*k2^2*k3^2*Cos[4*theta] + 14*beta19*f*gr1*k1^3*k2^2*k3^2*Cos[4*theta] - 14*beta19*C*f*gr1*k1^3*k2^2*k3^2*Cos[4*theta] + 14*beta19*f*gr1*k1^2*k2^3*k3^2*Cos[4*theta] - 14*beta19*C*f*gr1*k1^2*k2^3*k3^2*Cos[4*theta] - 28*f*gr1^2*k1^3*k2^3*k3^2*Cos[4*theta] + 28*C*f*gr1^2*k1^3*k2^3*k3^2*Cos[4*theta] + 6*beta10*f^2*k1^3*k2^3*Cos[5*theta])))\/(420*k1^3*k2^3*k3^4)"