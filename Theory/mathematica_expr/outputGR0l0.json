"(D1^4*Pk1*Pk3*(-(f^2*k2^3*(9*b1*(7*(-7 + 8*C)*k1^2 + 5*f*k2^2 + 7*k3^2) + 5*f*(9*(-7 + 8*C)*k1^2 + 7*f*k2^2 + 9*k3^2))*Cos[theta]^5) - 18*(-1 + C)*f^2*(7*b1 + 5*f)*k1*k2^4*Cos[theta]^6 + f*k1*(105*b1^3*k2^2*k3^2 + 21*b1^2*(f*k2^2*(3*k1^2 - 2*k3^2) - 5*(k1^2 - k3^2)*(K*k2^2 + (-1 + 2*C)*k3^2)) + f*(-5*f^2*k1^2*k2^2 - 9*(-1 + 2*C)*f*k1^2*(k1^2 - k3^2) + 21*k2^2*(b2*k3^2 + 2*g2*(k1^2 - k3^2))) + 3*b1*(3*f^2*k2^2*(2*k1^2 - 3*k3^2) - 7*f*(k1^2 - k3^2)*((-1 + 2*C)*k1^2 + K*k2^2 + (-1 + 2*C)*k3^2) + 35*k2^2*(b2*k3^2 + 2*g2*(k1^2 - k3^2))))*Sin[theta] - 9*f^2*k1*k2^2*(-7*b1^2*k2^2 + f*((-1 + 2*C)*k1^2 + f*k2^2 + (1 - 2*C)*k3^2) + b1*(7*(-1 + 2*C)*k1^2 + 2*f*k2^2 + 7*(1 - 2*C)*k3^2))*Sin[theta]^2 - 3*f*k1*k2^2*Cos[theta]^4*(-7*b1^2*((5 + 3*f - 5*K)*k2^2 - 10*(-1 + C)*k3^2) + b1*(30*f^2*k2^2 - 70*g2*k2^2 + 21*f*(3*(-3 + 4*C)*k1^2 + (-1 + K)*k2^2 + k3^2)) + f*(35*f^2*k2^2 - 42*g2*k2^2 + 15*f*(3*(-3 + 4*C)*k1^2 + (3 - 2*C)*k3^2)) + 12*(-1 + C)*f*(7*b1 + 3*f)*k2^2*Sin[theta]) - f*k2*Cos[theta]^3*(3*(f*k1^2*(35*f^2*k2^2 - 168*g2*k2^2 + 15*f*((-5 + 8*C)*k1^2 + (3 - 4*C)*k3^2)) - 7*b1^2*(-(k3^2*((5 + 6*f)*k2^2 + 5*k3^2)) + k1^2*((15 + 9*f - 20*K)*k2^2 + 5*(3 - 4*C)*k3^2)) + b1*(-280*g2*k1^2*k2^2 + 30*f^2*k2^2*k3^2 + 21*f*((-5 + 8*C)*k1^4 + (-3 + 4*K)*k1^2*k2^2 + k3^2*(k2^2 + k3^2)))) + 2*f*k2^2*(9*b1*(7*(-5 + 6*C)*k1^2 + 5*f*k2^2 + 7*k3^2) + f*(27*(-5 + 6*C)*k1^2 + 25*f*k2^2 + 27*k3^2))*Sin[theta]) + k1*Cos[theta]^2*(105*b1^3*(3 + f - 3*K)*k2^2*k3^2 + f^2*(-35*f^2*k1^2*k2^2 - 45*(-1 + 2*C)*f*k1^2*(k1^2 - k3^2) + 63*k2^2*(12*g2*k1^2 + b2*k3^2 - 2*g2*k3^2)) + 3*b1*f*(15*f^2*k2^2*(2*k1^2 - 3*k3^2) + 35*k2^2*(12*g2*k1^2 + b2*k3^2) - 21*f*((-1 + 2*C)*k1^4 + 3*(-1 + 2*K)*k1^2*k2^2 - (-2 + K)*k2^2*k3^2 + (1 - 2*C)*k3^4)) + 21*b1^2*(30*g2*k2^2*k3^2 + 3*f^2*k2^2*(3*k1^2 - 2*k3^2) - 5*f*(k3^2*(k2^2 + (1 - 2*C)*k3^2) + k1^2*((-3 + 6*K)*k2^2 + (-1 + 2*C)*k3^2))) + 3*f*k2^2*(7*b1^2*((5 + 6*f - 5*K)*k2^2 - 10*(-1 + C)*k3^2) + 2*f*(-3*(-13 + 19*C)*f*k1^2 - 15*f^2*k2^2 + 7*g2*k2^2 + 18*(-1 + C)*f*k3^2) + b1*(-36*f^2*k2^2 + 70*g2*k2^2 - 7*f*((-26 + 38*C)*k1^2 + (-1 + K)*k2^2 - 10*(-1 + C)*k3^2)))*Sin[theta]) - 3*k2*Cos[theta]*(35*b1^3*k3^2*(-((3 + f - 6*K)*k1^2) + (3 + f)*k3^2) - 42*f^2*k1^2*(4*g2*k1^2 + b2*k3^2 - 2*g2*k3^2) - b1*f*k1^2*(15*f^2*(k1^2 - k3^2) + 70*(4*g2*k1^2 + b2*k3^2) - 21*f*((-1 + 4*K)*k1^2 + (1 - 2*K)*k3^2)) - 7*b1^2*(60*g2*k1^2*k3^2 + 3*f^2*(k1^4 - k3^4) - 5*f*((-1 + 4*K)*k1^4 + k3^4)) + f*(f*k1^2*(-27*f*k1^2 + 15*f^2*k2^2 - 28*g2*k2^2 + 21*f*k3^2) - 7*b1^2*(-5*k3^2*(k2^2 + k3^2) + k1^2*((5 + 9*f - 10*K)*k2^2 + 5*(3 - 4*C)*k3^2)) + b1*(-140*g2*k1^2*k2^2 + 18*f^2*k2^2*k3^2 + 7*f*((-9 + 16*C)*k1^4 + k3^2*(k2^2 + k3^2) + k1^2*((-1 + 2*K)*k2^2 + 4*k3^2))))*Sin[theta] + f^2*k2^2*(f*(3*(-3 + 4*C)*k1^2 + 5*f*k2^2 + 3*k3^2) + 3*b1*(7*(-3 + 4*C)*k1^2 + 5*f*k2^2 + 7*k3^2))*Sin[theta]^2) - (3*(14*k1*(-(b2*k3^2) - 2*g2*(k1^2 - k3^2) + b1*K*(k1^2 - k3^2))*(3*f^2*k1^2 + 15*b1^2*k3^2 + 5*b1*f*(k1^2 + k3^2)) + 2*f^2*k2*(21*b1^2*k2^2*k3^2 + 2*C*k1^2*(12*f*k1^2 - 14*b1*k3^2 - 9*f*k3^2))*Sin[2*theta] + 3*(-1 + C)*f^2*(7*b1 + f)*k1*k2^4*Sin[2*theta]^2))\/2))\/(315*k1*k3^4)"