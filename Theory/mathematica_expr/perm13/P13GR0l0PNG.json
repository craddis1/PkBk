"(D1^4*Pk1*Pk3*(420*alphak1*alphak3^2*b1*bE01*f*k1^5 + 420*alphak3^2*bE01^2*f*k1^5 + 168*alphak1^2*alphak3^2*b1*f^2*k1^5 + 420*alphak1*alphak3^2*bE01*f^2*k1^5 - 336*alphak1^2*alphak3^2*b1*C*f^2*k1^5 - 336*alphak1*alphak3^2*bE01*C*f^2*k1^5 + 108*alphak1^2*alphak3^2*f^3*k1^5 - 216*alphak1^2*alphak3^2*C*f^3*k1^5 + 840*alphak1^2*alphak3^2*b1*f*g2*k1^5 + 840*alphak1*alphak3^2*bE01*f*g2*k1^5 + 504*alphak1^2*alphak3^2*f^2*g2*k1^5 - 420*alphak1^2*alphak3^2*b1^2*f*K*k1^5 - 420*alphak1*alphak3^2*b1*bE01*f*K*k1^5 - 252*alphak1^2*alphak3^2*b1*f^2*K*k1^5 + 630*alphak1^2*alphak3^2*b1^2*f*k1^3*k2^2 + 1470*alphak1*alphak3^2*b1*bE01*f*k1^3*k2^2 + 840*alphak3^2*bE01^2*f*k1^3*k2^2 + 1596*alphak1^2*alphak3^2*b1*f^2*k1^3*k2^2 + 504*alphak1^2*alphak3^2*b1^2*f^2*k1^3*k2^2 + 1638*alphak1*alphak3^2*bE01*f^2*k1^3*k2^2 + 1008*alphak1*alphak3^2*b1*bE01*f^2*k1^3*k2^2 + 504*alphak3^2*bE01^2*f^2*k1^3*k2^2 - 1722*alphak1^2*alphak3^2*b1*C*f^2*k1^3*k2^2 - 1722*alphak1*alphak3^2*bE01*C*f^2*k1^3*k2^2 + 738*alphak1^2*alphak3^2*f^3*k1^3*k2^2 + 216*alphak1^2*alphak3^2*b1*f^3*k1^3*k2^2 + 216*alphak1*alphak3^2*bE01*f^3*k1^3*k2^2 - 1008*alphak1^2*alphak3^2*C*f^3*k1^3*k2^2 - 80*alphak1^2*alphak3^2*f^4*k1^3*k2^2 + 2940*alphak1^2*alphak3^2*b1*f*g2*k1^3*k2^2 + 2940*alphak1*alphak3^2*bE01*f*g2*k1^3*k2^2 + 1596*alphak1^2*alphak3^2*f^2*g2*k1^3*k2^2 - 1470*alphak1^2*alphak3^2*b1^2*f*K*k1^3*k2^2 - 1470*alphak1*alphak3^2*b1*bE01*f*K*k1^3*k2^2 - 798*alphak1^2*alphak3^2*b1*f^2*K*k1^3*k2^2 + 210*alphak1^2*alphak3^2*b1^2*f*k1*k2^4 + 210*alphak1*alphak3^2*b1*bE01*f*k1*k2^4 + 357*alphak1^2*alphak3^2*b1*f^2*k1*k2^4 + 252*alphak1^2*alphak3^2*b1^2*f^2*k1*k2^4 + 252*alphak1*alphak3^2*bE01*f^2*k1*k2^4 + 504*alphak1*alphak3^2*b1*bE01*f^2*k1*k2^4 + 252*alphak3^2*bE01^2*f^2*k1*k2^4 - 252*alphak1^2*alphak3^2*b1*C*f^2*k1*k2^4 - 252*alphak1*alphak3^2*bE01*C*f^2*k1*k2^4 + 144*alphak1^2*alphak3^2*f^3*k1*k2^4 - 216*alphak1^2*alphak3^2*b1*f^3*k1*k2^4 - 216*alphak1*alphak3^2*bE01*f^3*k1*k2^4 - 144*alphak1^2*alphak3^2*C*f^3*k1*k2^4 - 216*alphak1^2*alphak3^2*f^4*k1*k2^4 + 420*alphak1^2*alphak3^2*b1*f*g2*k1*k2^4 + 420*alphak1*alphak3^2*bE01*f*g2*k1*k2^4 + 210*alphak1^2*alphak3^2*f^2*g2*k1*k2^4 - 210*alphak1^2*alphak3^2*b1^2*f*K*k1*k2^4 - 210*alphak1*alphak3^2*b1*bE01*f*K*k1*k2^4 - 105*alphak1^2*alphak3^2*b1*f^2*K*k1*k2^4 + 1260*alphak1*alphak3^2*b1^2*bE01*k1^3*k3^2 + 1260*alphak1*alphak3*b1*bE01^2*k1^3*k3^2 + 1260*alphak3^2*b1*bE01^2*k1^3*k3^2 + 1260*alphak3*bE01^3*k1^3*k3^2 + 420*alphak1^2*alphak3^2*b1^2*f*k1^3*k3^2 + 420*alphak1^2*alphak3^2*b1*b2*f*k1^3*k3^2 + 840*alphak1^2*alphak3*b1*bE01*f*k1^3*k3^2 + 840*alphak1*alphak3^2*b1*bE01*f*k1^3*k3^2 + 420*alphak1*alphak3^2*b2*bE01*f*k1^3*k3^2 + 1260*alphak1*alphak3*bE01^2*f*k1^3*k3^2 + 840*alphak1*alphak3*b1*bE02*f*k1^3*k3^2 + 840*alphak3*bE01*bE02*f*k1^3*k3^2 + 420*alphak1^2*alphak3*b1*bE11*f*k1^3*k3^2 + 420*alphak1*alphak3^2*b1*bE11*f*k1^3*k3^2 + 420*alphak1*alphak3*bE01*bE11*f*k1^3*k3^2 + 420*alphak3^2*bE01*bE11*f*k1^3*k3^2 - 840*alphak1^2*alphak3^2*b1^2*C*f*k1^3*k3^2 - 840*alphak1^2*alphak3*b1*bE01*C*f*k1^3*k3^2 - 840*alphak1*alphak3^2*b1*bE01*C*f*k1^3*k3^2 - 840*alphak1*alphak3*bE01^2*C*f*k1^3*k3^2 + 252*alphak1^2*alphak3^2*b2*f^2*k1^3*k3^2 + 420*alphak1^2*alphak3*bE01*f^2*k1^3*k3^2 - 168*alphak1*alphak3^2*bE01*f^2*k1^3*k3^2 + 504*alphak1*alphak3*bE02*f^2*k1^3*k3^2 + 252*alphak1^2*alphak3*bE11*f^2*k1^3*k3^2 + 252*alphak1*alphak3^2*bE11*f^2*k1^3*k3^2 - 336*alphak1^2*alphak3*bE01*C*f^2*k1^3*k3^2 + 336*alphak1*alphak3^2*bE01*C*f^2*k1^3*k3^2 - 108*alphak1^2*alphak3^2*f^3*k1^3*k3^2 + 216*alphak1^2*alphak3^2*C*f^3*k1^3*k3^2 + 840*alphak1*alphak2*alphak3*b1^2*f*fNL*k1^3*k3^2 + 840*alphak2*alphak3*b1*bE01*f*fNL*k1^3*k3^2 + 840*alphak1*alphak2*alphak3*b1*f^2*fNL*k1^3*k3^2 + 336*alphak2*alphak3*bE01*f^2*fNL*k1^3*k3^2 + 216*alphak1*alphak2*alphak3*f^3*fNL*k1^3*k3^2 + 2520*alphak1^2*alphak3^2*b1^2*g2*k1^3*k3^2 + 2520*alphak1^2*alphak3*b1*bE01*g2*k1^3*k3^2 + 2520*alphak1*alphak3^2*b1*bE01*g2*k1^3*k3^2 + 2520*alphak1*alphak3*bE01^2*g2*k1^3*k3^2 + 840*alphak1^2*alphak3*bE01*f*g2*k1^3*k3^2 - 840*alphak1*alphak3^2*bE01*f*g2*k1^3*k3^2 - 504*alphak1^2*alphak3^2*f^2*g2*k1^3*k3^2 - 1260*alphak1^2*alphak3^2*b1^3*K*k1^3*k3^2 - 1260*alphak1^2*alphak3*b1^2*bE01*K*k1^3*k3^2 - 1260*alphak1*alphak3^2*b1^2*bE01*K*k1^3*k3^2 - 1260*alphak1*alphak3*b1*bE01^2*K*k1^3*k3^2 - 420*alphak1^2*alphak3*b1*bE01*f*K*k1^3*k3^2 + 420*alphak1*alphak3^2*b1*bE01*f*K*k1^3*k3^2 + 252*alphak1^2*alphak3^2*b1*f^2*K*k1^3*k3^2 + 630*alphak1^2*alphak3^2*b1^3*k1*k2^2*k3^2 + 630*alphak1^2*alphak3*b1^2*bE01*k1*k2^2*k3^2 + 630*alphak1*alphak3^2*b1^2*bE01*k1*k2^2*k3^2 + 630*alphak1*alphak3*b1*bE01^2*k1*k2^2*k3^2 + 210*alphak1^2*alphak3^2*b1^2*f*k1*k2^2*k3^2 + 420*alphak1^2*alphak3^2*b1^3*f*k1*k2^2*k3^2 + 420*alphak1^2*alphak3^2*b1*b2*f*k1*k2^2*k3^2 + 1470*alphak1^2*alphak3*b1*bE01*f*k1*k2^2*k3^2 + 420*alphak1^2*alphak3*b1^2*bE01*f*k1*k2^2*k3^2 + 840*alphak1*alphak3^2*b1^2*bE01*f*k1*k2^2*k3^2 + 420*alphak1*alphak3^2*b2*bE01*f*k1*k2^2*k3^2 + 1260*alphak1*alphak3*bE01^2*f*k1*k2^2*k3^2 + 840*alphak1*alphak3*b1*bE01^2*f*k1*k2^2*k3^2 + 420*alphak3^2*b1*bE01^2*f*k1*k2^2*k3^2 + 420*alphak3*bE01^3*f*k1*k2^2*k3^2 + 840*alphak1*alphak3*b1*bE02*f*k1*k2^2*k3^2 + 840*alphak3*bE01*bE02*f*k1*k2^2*k3^2 + 420*alphak1^2*alphak3*b1*bE11*f*k1*k2^2*k3^2 + 420*alphak1*alphak3^2*b1*bE11*f*k1*k2^2*k3^2 + 420*alphak1*alphak3*bE01*bE11*f*k1*k2^2*k3^2 + 420*alphak3^2*bE01*bE11*f*k1*k2^2*k3^2 - 420*alphak1^2*alphak3^2*b1^2*C*f*k1*k2^2*k3^2 - 420*alphak1^2*alphak3*b1*bE01*C*f*k1*k2^2*k3^2 - 420*alphak1*alphak3^2*b1*bE01*C*f*k1*k2^2*k3^2 - 420*alphak1*alphak3*bE01^2*C*f*k1*k2^2*k3^2 - 546*alphak1^2*alphak3^2*b1*f^2*k1*k2^2*k3^2 - 336*alphak1^2*alphak3^2*b1^2*f^2*k1*k2^2*k3^2 + 168*alphak1^2*alphak3^2*b2*f^2*k1*k2^2*k3^2 + 630*alphak1^2*alphak3*bE01*f^2*k1*k2^2*k3^2 - 504*alphak1*alphak3^2*bE01*f^2*k1*k2^2*k3^2 - 336*alphak1^2*alphak3*b1*bE01*f^2*k1*k2^2*k3^2 - 336*alphak1*alphak3^2*b1*bE01*f^2*k1*k2^2*k3^2 - 336*alphak1*alphak3*bE01^2*f^2*k1*k2^2*k3^2 + 336*alphak1*alphak3*bE02*f^2*k1*k2^2*k3^2 + 168*alphak1^2*alphak3*bE11*f^2*k1*k2^2*k3^2 + 168*alphak1*alphak3^2*bE11*f^2*k1*k2^2*k3^2 + 294*alphak1^2*alphak3^2*b1*C*f^2*k1*k2^2*k3^2 - 210*alphak1^2*alphak3*bE01*C*f^2*k1*k2^2*k3^2 + 504*alphak1*alphak3^2*bE01*C*f^2*k1*k2^2*k3^2 - 270*alphak1^2*alphak3^2*f^3*k1*k2^2*k3^2 - 324*alphak1^2*alphak3^2*b1*f^3*k1*k2^2*k3^2 - 324*alphak1^2*alphak3*bE01*f^3*k1*k2^2*k3^2 + 216*alphak1^2*alphak3^2*C*f^3*k1*k2^2*k3^2 + 840*alphak1*alphak2*alphak3*b1^2*f*fNL*k1*k2^2*k3^2 + 840*alphak2*alphak3*b1*bE01*f*fNL*k1*k2^2*k3^2 + 840*alphak1*alphak2*alphak3*b1*f^2*fNL*k1*k2^2*k3^2 + 504*alphak2*alphak3*bE01*f^2*fNL*k1*k2^2*k3^2 + 216*alphak1*alphak2*alphak3*f^3*fNL*k1*k2^2*k3^2 + 1260*alphak1^2*alphak3^2*b1^2*g2*k1*k2^2*k3^2 + 1260*alphak1^2*alphak3*b1*bE01*g2*k1*k2^2*k3^2 + 1260*alphak1*alphak3^2*b1*bE01*g2*k1*k2^2*k3^2 + 1260*alphak1*alphak3*bE01^2*g2*k1*k2^2*k3^2 - 420*alphak1^2*alphak3^2*b1*f*g2*k1*k2^2*k3^2 + 420*alphak1^2*alphak3*bE01*f*g2*k1*k2^2*k3^2 - 840*alphak1*alphak3^2*bE01*f*g2*k1*k2^2*k3^2 - 336*alphak1^2*alphak3^2*f^2*g2*k1*k2^2*k3^2 - 630*alphak1^2*alphak3^2*b1^3*K*k1*k2^2*k3^2 - 630*alphak1^2*alphak3*b1^2*bE01*K*k1*k2^2*k3^2 - 630*alphak1*alphak3^2*b1^2*bE01*K*k1*k2^2*k3^2 - 630*alphak1*alphak3*b1*bE01^2*K*k1*k2^2*k3^2 + 210*alphak1^2*alphak3^2*b1^2*f*K*k1*k2^2*k3^2 - 210*alphak1^2*alphak3*b1*bE01*f*K*k1*k2^2*k3^2 + 420*alphak1*alphak3^2*b1*bE01*f*K*k1*k2^2*k3^2 + 168*alphak1^2*alphak3^2*b1*f^2*K*k1*k2^2*k3^2 + 1260*alphak1^2*alphak3^2*b1^2*b2*k1*k3^4 + 1260*alphak1^2*alphak3*b1^2*bE01*k1*k3^4 + 1260*alphak1^2*alphak3*b1*b2*bE01*k1*k3^4 + 1260*alphak1*alphak3^2*b1*b2*bE01*k1*k3^4 + 1260*alphak1^2*b1*bE01^2*k1*k3^4 + 1260*alphak1*alphak3*b1*bE01^2*k1*k3^4 + 1260*alphak1*alphak3*b2*bE01^2*k1*k3^4 + 1260*alphak1*bE01^3*k1*k3^4 + 2520*alphak1*alphak3*b1^2*bE02*k1*k3^4 + 2520*alphak1*b1*bE01*bE02*k1*k3^4 + 2520*alphak3*b1*bE01*bE02*k1*k3^4 + 2520*bE01^2*bE02*k1*k3^4 + 1260*alphak1^2*alphak3*b1^2*bE11*k1*k3^4 + 1260*alphak1*alphak3^2*b1^2*bE11*k1*k3^4 + 1260*alphak1^2*b1*bE01*bE11*k1*k3^4 + 2520*alphak1*alphak3*b1*bE01*bE11*k1*k3^4 + 1260*alphak3^2*b1*bE01*bE11*k1*k3^4 + 1260*alphak1*bE01^2*bE11*k1*k3^4 + 1260*alphak3*bE01^2*bE11*k1*k3^4 - 420*alphak1^2*alphak3^2*b1^2*f*k1*k3^4 + 420*alphak1^2*alphak3^2*b1*b2*f*k1*k3^4 - 420*alphak1*alphak3^2*b1*bE01*f*k1*k3^4 + 420*alphak1^2*alphak3*b2*bE01*f*k1*k3^4 + 420*alphak1^2*bE01^2*f*k1*k3^4 - 420*alphak1*alphak3*bE01^2*f*k1*k3^4 + 840*alphak1*alphak3*b1*bE02*f*k1*k3^4 + 840*alphak1*bE01*bE02*f*k1*k3^4 + 420*alphak1^2*alphak3*b1*bE11*f*k1*k3^4 + 420*alphak1*alphak3^2*b1*bE11*f*k1*k3^4 + 420*alphak1^2*bE01*bE11*f*k1*k3^4 + 420*alphak1*alphak3*bE01*bE11*f*k1*k3^4 + 840*alphak1^2*alphak3^2*b1^2*C*f*k1*k3^4 + 840*alphak1^2*alphak3*b1*bE01*C*f*k1*k3^4 + 840*alphak1*alphak3^2*b1*bE01*C*f*k1*k3^4 + 840*alphak1*alphak3*bE01^2*C*f*k1*k3^4 - 168*alphak1^2*alphak3^2*b1*f^2*k1*k3^4 - 168*alphak1^2*alphak3*bE01*f^2*k1*k3^4 + 336*alphak1^2*alphak3^2*b1*C*f^2*k1*k3^4 + 336*alphak1^2*alphak3*bE01*C*f^2*k1*k3^4 + 2520*alphak1*alphak2*alphak3*b1^3*fNL*k1*k3^4 + 2520*alphak1*alphak2*b1^2*bE01*fNL*k1*k3^4 + 2520*alphak2*alphak3*b1^2*bE01*fNL*k1*k3^4 + 2520*alphak2*b1*bE01^2*fNL*k1*k3^4 + 1680*alphak1*alphak2*alphak3*b1^2*f*fNL*k1*k3^4 + 1680*alphak1*alphak2*b1*bE01*f*fNL*k1*k3^4 + 840*alphak2*alphak3*b1*bE01*f*fNL*k1*k3^4 + 840*alphak2*bE01^2*f*fNL*k1*k3^4 + 336*alphak1*alphak2*alphak3*b1*f^2*fNL*k1*k3^4 + 336*alphak1*alphak2*bE01*f^2*fNL*k1*k3^4 - 2520*alphak1^2*alphak3^2*b1^2*g2*k1*k3^4 - 2520*alphak1^2*alphak3*b1*bE01*g2*k1*k3^4 - 2520*alphak1*alphak3^2*b1*bE01*g2*k1*k3^4 - 2520*alphak1*alphak3*bE01^2*g2*k1*k3^4 - 840*alphak1^2*alphak3^2*b1*f*g2*k1*k3^4 - 840*alphak1^2*alphak3*bE01*f*g2*k1*k3^4 + 1260*alphak1^2*alphak3^2*b1^3*K*k1*k3^4 + 1260*alphak1^2*alphak3*b1^2*bE01*K*k1*k3^4 + 1260*alphak1*alphak3^2*b1^2*bE01*K*k1*k3^4 + 1260*alphak1*alphak3*b1*bE01^2*K*k1*k3^4 + 420*alphak1^2*alphak3^2*b1^2*f*K*k1*k3^4 + 420*alphak1^2*alphak3*b1*bE01*f*K*k1*k3^4 + 6*k2*(14*alphak3*bE01*k1^2*((5*bE01^2*(3 + f) + 4*f*(5*bE02 + 5*alphak2*b1*fNL + 3*alphak2*f*fNL))*k3^2 + alphak3*(10*bE11*f*k3^2 + bE01*(3*f^2*(k1^2 + 3*k2^2) + 15*b1*k3^2 + 5*f*(3*k1^2 + k2^2 + b1*k3^2)))) + alphak1^2*(14*bE01^2*(-5*b1*(-3 + f) + (5 - 3*f)*f)*k3^4 + alphak3*k3^2*(70*b1^2*bE01*((3 + f - 6*K)*k1^2 - 2*f*k3^2) - 14*b1*(-10*bE11*f*k1^2 + bE01*(-60*g2*k1^2 + 5*f*((-7 + 4*C + 2*K)*k1^2 - k2^2 + k3^2) + 6*f^2*(k2^2 + k3^2))) + f*(84*bE11*f*k1^2 + bE01*(280*g2*k1^2 - 6*f^2*(5*k1^2 + 9*k2^2) - 7*f*((-33 + 20*C)*k1^2 - 5*k2^2 + 5*k3^2)))) + alphak3^2*(70*b1^3*((3 + f - 6*K)*k1^2*k3^2 - (3 + f)*k3^4) + 2*f^2*(-10*f^2*(3*k1^2*k2^2 + k2^4) + 7*k1^2*(6*b2*k3^2 + g2*(24*k1^2 + 19*k2^2 - 12*k3^2)) - 3*f*((-21 + 34*C)*k1^4 + 4*k2^2*k3^2 + k1^2*((-26 + 30*C)*k2^2 + (13 - 18*C)*k3^2))) + 7*b1^2*(120*g2*k1^2*k3^2 + 6*f^2*(k1^4 + 3*k1^2*k2^2 - k3^2*(2*k2^2 + k3^2)) - 5*f*((-2 + 8*K)*k1^4 + 2*k3^2*(k2^2 + 2*k3^2) + k1^2*((-5 + 7*K)*k2^2 + 2*(-3 + 4*C)*k3^2))) + b1*f*(70*k1^2*(8*g2*k1^2 + 7*g2*k2^2 + 2*b2*k3^2) + 6*f^2*(5*k1^4 - 5*k2^4 - 5*k1^2*k3^2 - 9*k2^2*k3^2) - 7*f*((-33 + 44*C + 24*K)*k1^4 + 11*k2^2*k3^2 + 5*k3^4 + k1^2*((-50 + 42*C + 19*K)*k2^2 - 4*(-2 + C + 3*K)*k3^2))))) + alphak1*(-70*bE01^3*(-3 + f)*k3^4 + 2*alphak3*k3^2*(70*bE01*bE11*f*k1^2 + 140*alphak2*b1^2*f*fNL*k1^2 + 6*f^2*(14*bE02 + 9*alphak2*f*fNL)*k1^2 - 7*bE01^2*(-60*g2*k1^2 + 6*f^2*k2^2 + 5*f*((-7 + 4*C)*k1^2 - k2^2 + k3^2)) + 14*b1*(2*f*(5*bE02 + 6*alphak2*f*fNL)*k1^2 + 5*bE01^2*((3 + f - 3*K)*k1^2 - f*k3^2))) + alphak3^2*(-70*b1^2*bE01*k3^2*(-2*(3 + f - 3*K)*k1^2 + (3 + f)*k3^2) + f*(84*bE11*f*k1^2*k3^2 + bE01*(30*f^2*(k1^4 - k2^4) + 70*k1^2*(2*b2*k3^2 + g2*(8*k1^2 + 7*k2^2 - 4*k3^2)) - 7*f*((-45 + 44*C)*k1^4 + 6*k2^2*k3^2 + k1^2*((-41 + 42*C)*k2^2 + (17 - 24*C)*k3^2)))) + 7*b1*(20*bE11*f*k1^2*k3^2 + bE01*(120*g2*k1^2*k3^2 + 12*f^2*(k1^4 + 3*k1^2*k2^2 - k2^2*k3^2) - 5*f*(8*(-1 + K)*k1^4 + 2*k3^2*(k2^2 + k3^2) + k1^2*(7*(-1 + K)*k2^2 + 2*(-3 + 4*C - 2*K)*k3^2)))))))*Cos[theta] - 6*k1*(-14*alphak3*bE01*f*k1^2*(alphak3*bE01*(5 + 3*f)*k2^2 + 2*alphak2*f*fNL*k3^2) + alphak1^2*alphak3*(k3^2*(-14*bE11*f^2*k2^2 + bE01*(36*f^3*k2^2 + 105*b1*(-2*g2 + b1*(-1 + K))*k2^2 + 35*f*(-2*g2 + b1*(-5 + 2*C + K))*k2^2 + 14*f^2*((-1 + 2*C)*k1^2 + (-7 + 2*b1 + 3*C)*k2^2 + (1 - 2*C)*k3^2))) + alphak3*(105*b1^3*(-1 + K)*k2^2*k3^2 + 7*b1^2*k2^2*(-30*g2*k3^2 + f^2*(-6*k1^2 + 4*k3^2) + 5*f*((-3 + 5*K)*k1^2 + (-1 + K)*k2^2 + (-1 + 2*C + K)*k3^2)) + b1*f*(-70*g2*k2^2*(5*k1^2 + k2^2 + k3^2) + 12*f^2*k2^2*(-2*k1^2 + 2*k2^2 + 3*k3^2) + 7*f*((-2 + 4*C)*k1^4 + (-33 + 30*C + 17*K)*k1^2*k2^2 + 3*(-3 + 2*C + K)*k2^4 + 2*(3 + 3*C - K)*k2^2*k3^2 + 2*(1 - 2*C)*k3^4)) + 2*f^2*(f^2*(5*k1^2*k2^2 + 16*k2^4) - 7*k2^2*(b2*k3^2 + g2*(17*k1^2 + 3*k2^2 - 2*k3^2)) + 3*f*((-2 + 4*C)*k1^4 + 5*(-1 + C)*k2^4 + (7 - 4*C)*k2^2*k3^2 + k1^2*((-22 + 29*C)*k2^2 + 2*(1 - 2*C)*k3^2))))) - alphak1*(28*alphak2*bE01*f^2*fNL*k3^4 + alphak3*k3^2*(-7*(-4*bE02*f^2 + 2*bE01^2*(5*(-2 + C)*f + 2*f^2 - 15*g2) + 15*b1*bE01^2*(-1 + K))*k2^2 + 4*alphak2*f^2*fNL*(6*f*(k1^2 + k2^2) + 7*b1*(k1^2 + k2^2 + k3^2))) + alphak3^2*(14*bE11*f^2*k2^2*k3^2 + bE01*(24*f^3*k2^2*(k1^2 - k2^2) - 105*b1*(-2*g2 + b1*(-1 + K))*k2^2*k3^2 - 14*f^2*((-1 + 2*C)*k1^4 + 3*(-1 + C)*k2^4 + (3 + 2*b1)*k2^2*k3^2 + k1^2*((-16 - 6*b1 + 15*C)*k2^2 + (1 - 2*C)*k3^2)) - 35*f*k2^2*(-2*g2*(5*k1^2 + k2^2) + b1*(5*(-1 + K)*k1^2 + (-1 + K)*k2^2 + 2*C*k3^2))))))*Cos[2*theta] + 126*alphak1^2*alphak3^2*b1*f^2*k1^4*k2*Cos[3*theta] + 126*alphak1*alphak3^2*bE01*f^2*k1^4*k2*Cos[3*theta] - 168*alphak1^2*alphak3^2*b1*C*f^2*k1^4*k2*Cos[3*theta] - 168*alphak1*alphak3^2*bE01*C*f^2*k1^4*k2*Cos[3*theta] + 144*alphak1^2*alphak3^2*f^3*k1^4*k2*Cos[3*theta] - 216*alphak1^2*alphak3^2*C*f^3*k1^4*k2*Cos[3*theta] + 210*alphak1^2*alphak3^2*b1^2*f*k1^2*k2^3*Cos[3*theta] + 210*alphak1*alphak3^2*b1*bE01*f*k1^2*k2^3*Cos[3*theta] + 420*alphak1^2*alphak3^2*b1*f^2*k1^2*k2^3*Cos[3*theta] + 294*alphak1*alphak3^2*bE01*f^2*k1^2*k2^3*Cos[3*theta] - 252*alphak1^2*alphak3^2*b1*C*f^2*k1^2*k2^3*Cos[3*theta] - 252*alphak1*alphak3^2*bE01*C*f^2*k1^2*k2^3*Cos[3*theta] + 306*alphak1^2*alphak3^2*f^3*k1^2*k2^3*Cos[3*theta] - 342*alphak1^2*alphak3^2*C*f^3*k1^2*k2^3*Cos[3*theta] - 60*alphak1^2*alphak3^2*f^4*k1^2*k2^3*Cos[3*theta] + 420*alphak1^2*alphak3^2*b1*f*g2*k1^2*k2^3*Cos[3*theta] + 420*alphak1*alphak3^2*bE01*f*g2*k1^2*k2^3*Cos[3*theta] + 420*alphak1^2*alphak3^2*f^2*g2*k1^2*k2^3*Cos[3*theta] - 210*alphak1^2*alphak3^2*b1^2*f*K*k1^2*k2^3*Cos[3*theta] - 210*alphak1*alphak3^2*b1*bE01*f*K*k1^2*k2^3*Cos[3*theta] - 210*alphak1^2*alphak3^2*b1*f^2*K*k1^2*k2^3*Cos[3*theta] - 20*alphak1^2*alphak3^2*f^4*k2^5*Cos[3*theta] + 84*alphak1^2*alphak3^2*b1*f^2*k1^2*k2*k3^2*Cos[3*theta] + 126*alphak1^2*alphak3*bE01*f^2*k1^2*k2*k3^2*Cos[3*theta] - 42*alphak1*alphak3^2*bE01*f^2*k1^2*k2*k3^2*Cos[3*theta] - 168*alphak1^2*alphak3^2*b1*C*f^2*k1^2*k2*k3^2*Cos[3*theta] - 168*alphak1^2*alphak3*bE01*C*f^2*k1^2*k2*k3^2*Cos[3*theta] - 72*alphak1^2*alphak3^2*f^3*k1^2*k2*k3^2*Cos[3*theta] + 72*alphak1^2*alphak3^2*C*f^3*k1^2*k2*k3^2*Cos[3*theta] + 72*alphak1*alphak2*alphak3*f^3*fNL*k1^2*k2*k3^2*Cos[3*theta] - 42*alphak1^2*alphak3^2*b1*f^2*k2^3*k3^2*Cos[3*theta] + 42*alphak1^2*alphak3*bE01*f^2*k2^3*k3^2*Cos[3*theta] - 36*alphak1^2*alphak3^2*f^3*k2^3*k3^2*Cos[3*theta] - 36*alphak1^2*alphak3^2*b1*f^3*k2^3*k3^2*Cos[3*theta] - 36*alphak1^2*alphak3*bE01*f^3*k2^3*k3^2*Cos[3*theta] - 42*alphak1^2*alphak3^2*b1*f^2*k2*k3^4*Cos[3*theta] - 42*alphak1^2*alphak3*bE01*f^2*k2*k3^4*Cos[3*theta] + 42*alphak1^2*alphak3^2*b1*f^2*k1^3*k2^2*Cos[4*theta] + 42*alphak1*alphak3^2*bE01*f^2*k1^3*k2^2*Cos[4*theta] - 42*alphak1^2*alphak3^2*b1*C*f^2*k1^3*k2^2*Cos[4*theta] - 42*alphak1*alphak3^2*bE01*C*f^2*k1^3*k2^2*Cos[4*theta] + 90*alphak1^2*alphak3^2*f^3*k1^3*k2^2*Cos[4*theta] - 108*alphak1^2*alphak3^2*C*f^3*k1^3*k2^2*Cos[4*theta] + 21*alphak1^2*alphak3^2*b1*f^2*k1*k2^4*Cos[4*theta] + 36*alphak1^2*alphak3^2*f^3*k1*k2^4*Cos[4*theta] - 36*alphak1^2*alphak3^2*C*f^3*k1*k2^4*Cos[4*theta] - 12*alphak1^2*alphak3^2*f^4*k1*k2^4*Cos[4*theta] + 42*alphak1^2*alphak3^2*f^2*g2*k1*k2^4*Cos[4*theta] - 21*alphak1^2*alphak3^2*b1*f^2*K*k1*k2^4*Cos[4*theta] + 42*alphak1^2*alphak3^2*b1*f^2*k1*k2^2*k3^2*Cos[4*theta] + 42*alphak1^2*alphak3*bE01*f^2*k1*k2^2*k3^2*Cos[4*theta] - 42*alphak1^2*alphak3^2*b1*C*f^2*k1*k2^2*k3^2*Cos[4*theta] - 42*alphak1^2*alphak3*bE01*C*f^2*k1*k2^2*k3^2*Cos[4*theta] - 18*alphak1^2*alphak3^2*f^3*k1*k2^2*k3^2*Cos[4*theta] + 18*alphak1^2*alphak3^2*f^3*k1^2*k2^3*Cos[5*theta] - 18*alphak1^2*alphak3^2*C*f^3*k1^2*k2^3*Cos[5*theta]))\/(1260*alphak1^2*alphak3^2*k1*k3^4)"