"(D1^4*Pk1*Pk3*(-(k2*(-140*b1^2*(gr2*k2^2*(k1^2 + k3^2)*((3 + f - 6*K)*k1^2 - (3 + f)*k3^2) - k1^2*k3^2*(6*beta11*k2^2 - 4*beta13*k2^2 + 2*beta8*k2^2 + 4*beta10*k3^2 + 3*beta7*((-3 + 4*C)*k1^2 + k3^2) + 3*beta6*((-1 + 2*K)*k1^2 + k3^2))) + 7*b1*(-100*beta7*f*k1^6 + 160*beta7*C*f*k1^6 + 120*beta11*f*k1^4*k2^2 - 80*beta12*f*k1^4*k2^2 - 144*beta13*f*k1^4*k2^2 - 120*beta7*f*k1^4*k2^2 + 72*beta8*f*k1^4*k2^2 + 140*beta7*C*f*k1^4*k2^2 - 100*f*gr2*k1^4*k2^2 + 80*C*f*gr2*k1^4*k2^2 - 24*f^2*gr2*k1^4*k2^2 - 240*g2*gr2*k1^4*k2^2 + 120*f*gr2*K*k1^4*k2^2 + 40*beta11*f*k1^2*k2^4 - 96*beta13*f*k1^2*k2^4 + 24*beta8*f*k1^2*k2^4 - 48*beta9*f*k1^2*k2^4 - 50*f*gr2*k1^2*k2^4 - 24*f^2*gr2*k1^2*k2^4 + 70*f*gr2*K*k1^2*k2^4 - 20*beta19*gr1*k1^6*k3 + 40*beta19*C*gr1*k1^6*k3 - 40*beta14*gr1*k1^4*k2^2*k3 - 40*beta15*gr1*k1^4*k2^2*k3 + 80*beta16*gr1*k1^4*k2^2*k3 + 72*beta17*gr1*k1^4*k2^2*k3 - 24*beta18*gr1*k1^4*k2^2*k3 - 90*beta19*gr1*k1^4*k2^2*k3 + 110*beta19*C*gr1*k1^4*k2^2*k3 - 20*gr1^2*k1^5*k2^2*k3 - 12*f*gr1^2*k1^5*k2^2*k3 + 60*gr1^2*K*k1^5*k2^2*k3 - 40*beta15*gr1*k1^2*k2^4*k3 + 96*beta17*gr1*k1^2*k2^4*k3 - 24*beta18*gr1*k1^2*k2^4*k3 - 15*gr1^2*k1^3*k2^4*k3 - 12*f*gr1^2*k1^3*k2^4*k3 + 15*gr1^2*K*k1^3*k2^4*k3 + 20*beta19*gr1*k1^5*k3^2 - 40*beta19*C*gr1*k1^5*k3^2 + 40*beta11*f*k1^2*k2^2*k3^2 - 80*beta12*f*k1^2*k2^2*k3^2 - 48*beta13*f*k1^2*k2^2*k3^2 + 20*beta7*f*k1^2*k2^2*k3^2 + 24*beta8*f*k1^2*k2^2*k3^2 + 80*C*f*gr2*k1^2*k2^2*k3^2 + 24*f^2*gr2*k1^2*k2^2*k3^2 - 240*g2*gr2*k1^2*k2^2*k3^2 - 40*f*gr2*K*k1^2*k2^2*k3^2 + 40*beta15*gr1*k1^3*k2^2*k3^2 - 40*beta16*gr1*k1^3*k2^2*k3^2 - 72*beta17*gr1*k1^3*k2^2*k3^2 + 24*beta18*gr1*k1^3*k2^2*k3^2 + 30*beta19*gr1*k1^3*k2^2*k3^2 - 30*beta19*C*gr1*k1^3*k2^2*k3^2 + 20*f*gr2*k2^4*k3^2 + 24*f^2*gr2*k2^4*k3^2 - 24*beta17*gr1*k1*k2^4*k3^2 + 20*beta19*gr1*k1^4*k3^3 - 40*beta19*C*gr1*k1^4*k3^3 + 80*beta14*gr1*k1^2*k2^2*k3^3 - 40*beta16*gr1*k1^2*k2^2*k3^3 + 20*beta19*gr1*k1^2*k2^2*k3^3 + 20*gr1^2*k1^3*k2^2*k3^3 + 12*f*gr1^2*k1^3*k2^2*k3^3 - 20*gr1^2*K*k1^3*k2^2*k3^3 + 20*beta7*f*k1^2*k3^4 - 20*beta19*gr1*k1^3*k3^4 + 40*beta19*C*gr1*k1^3*k3^4 + 20*f*gr2*k2^2*k3^4 - 40*beta14*gr1*k1*k2^2*k3^4 + 10*beta6*f*k1^2*((-2 + 8*K)*k1^4 + (-5 + 7*K)*k1^2*k2^2 + 2*k3^2*(k2^2 + k3^2)) + 4*beta10*f*k1^2*(12*k1^4 - k1^2*(9*k2^2 + 2*k3^2) + 2*k3^2*(6*k2^2 + 5*k3^2))) - 2*(210*beta7*f^2*k1^6 - 336*beta7*C*f^2*k1^6 - 42*beta19*f*gr1*k1^7 + 84*beta19*C*f*gr1*k1^7 - 252*beta11*f^2*k1^4*k2^2 + 168*beta12*f^2*k1^4*k2^2 + 360*beta13*f^2*k1^4*k2^2 + 231*beta7*f^2*k1^4*k2^2 - 180*beta8*f^2*k1^4*k2^2 - 266*beta7*C*f^2*k1^4*k2^2 + 294*f^2*gr2*k1^4*k2^2 - 448*C*f^2*gr2*k1^4*k2^2 + 840*f*g2*gr2*k1^4*k2^2 - 168*beta14*f*gr1*k1^5*k2^2 - 84*beta15*f*gr1*k1^5*k2^2 + 252*beta16*f*gr1*k1^5*k2^2 + 180*beta17*f*gr1*k1^5*k2^2 - 60*beta18*f*gr1*k1^5*k2^2 - 315*beta19*f*gr1*k1^5*k2^2 + 427*beta19*C*f*gr1*k1^5*k2^2 - 70*beta11*f^2*k1^2*k2^4 + 216*beta13*f^2*k1^2*k2^4 - 54*beta8*f^2*k1^2*k2^4 + 108*beta9*f^2*k1^2*k2^4 + 252*f^2*gr2*k1^2*k2^4 - 294*C*f^2*gr2*k1^2*k2^4 - 108*f^3*gr2*k1^2*k2^4 + 490*f*g2*gr2*k1^2*k2^4 - 224*beta15*f*gr1*k1^3*k2^4 + 84*beta16*f*gr1*k1^3*k2^4 + 540*beta17*f*gr1*k1^3*k2^4 - 162*beta18*f*gr1*k1^3*k2^4 - 63*beta19*f*gr1*k1^3*k2^4 + 63*beta19*C*f*gr1*k1^3*k2^4 - 30*f^3*gr2*k2^6 + 60*beta17*f*gr1*k1*k2^6 + 42*beta19*f*gr1*k1^6*k3 - 84*beta19*C*f*gr1*k1^6*k3 + 84*beta14*f*gr1*k1^4*k2^2*k3 + 84*beta15*f*gr1*k1^4*k2^2*k3 - 168*beta16*f*gr1*k1^4*k2^2*k3 - 180*beta17*f*gr1*k1^4*k2^2*k3 + 60*beta18*f*gr1*k1^4*k2^2*k3 + 168*beta19*f*gr1*k1^4*k2^2*k3 - 203*beta19*C*f*gr1*k1^4*k2^2*k3 + 147*f*gr1^2*k1^5*k2^2*k3 - 224*C*f*gr1^2*k1^5*k2^2*k3 + 420*g2*gr1^2*k1^5*k2^2*k3 + 70*beta15*f*gr1*k1^2*k2^4*k3 - 216*beta17*f*gr1*k1^2*k2^4*k3 + 54*beta18*f*gr1*k1^2*k2^4*k3 + 63*f*gr1^2*k1^3*k2^4*k3 - 63*C*f*gr1^2*k1^3*k2^4*k3 - 54*f^2*gr1^2*k1^3*k2^4*k3 + 105*g2*gr1^2*k1^3*k2^4*k3 - 126*beta7*f^2*k1^4*k3^2 + 168*beta7*C*f^2*k1^4*k3^2 + 42*beta19*f*gr1*k1^5*k3^2 - 84*beta19*C*f*gr1*k1^5*k3^2 + 168*beta12*f^2*k1^2*k2^2*k3^2 - 35*beta7*f^2*k1^2*k2^2*k3^2 + 140*b2*f*gr2*k1^2*k2^2*k3^2 - 154*f^2*gr2*k1^2*k2^2*k3^2 + 168*C*f^2*gr2*k1^2*k2^2*k3^2 - 280*f*g2*gr2*k1^2*k2^2*k3^2 + 252*beta14*f*gr1*k1^3*k2^2*k3^2 - 168*beta16*f*gr1*k1^3*k2^2*k3^2 + 112*beta19*f*gr1*k1^3*k2^2*k3^2 - 84*beta19*C*f*gr1*k1^3*k2^2*k3^2 - 42*f^2*gr2*k2^4*k3^2 + 84*beta14*f*gr1*k1*k2^4*k3^2 - 42*beta19*f*gr1*k1^4*k3^3 + 84*beta19*C*f*gr1*k1^4*k3^3 - 168*beta14*f*gr1*k1^2*k2^2*k3^3 + 84*beta16*f*gr1*k1^2*k2^2*k3^3 - 35*beta19*f*gr1*k1^2*k2^2*k3^3 + 70*b2*gr1^2*k1^3*k2^2*k3^3 - 77*f*gr1^2*k1^3*k2^2*k3^3 + 84*C*f*gr1^2*k1^3*k2^2*k3^3 - 140*g2*gr1^2*k1^3*k2^2*k3^3 - 12*beta10*f^2*k1^2*(9*k1^4 + 8*k2^2*k3^2 - k1^2*(7*k2^2 + k3^2)) - 7*beta6*f^2*k1^2*(6*(-1 + 4*K)*k1^4 + 5*k2^2*k3^2 + k1^2*((-14 + 19*K)*k2^2 + 6*(1 - 2*K)*k3^2))))*Cos[theta]) + k1*(-112*b1*beta10*f*k1^6 + 140*b1*beta7*f*k1^6 - 280*b1*beta7*C*f*k1^6 - 72*beta10*f^2*k1^6 + 84*beta7*f^2*k1^6 - 168*beta7*C*f^2*k1^6 - 140*b1*beta6*f*K*k1^6 - 84*beta6*f^2*K*k1^6 - 98*b1*beta10*f*k1^4*k2^2 - 280*b1*beta11*f*k1^4*k2^2 + 280*b1*beta12*f*k1^4*k2^2 + 336*b1*beta13*f*k1^4*k2^2 + 210*b1*beta6*f*k1^4*k2^2 + 700*b1*beta7*f*k1^4*k2^2 - 168*b1*beta8*f*k1^4*k2^2 - 980*b1*beta7*C*f*k1^4*k2^2 - 24*beta10*f^2*k1^4*k2^2 - 168*beta11*f^2*k1^4*k2^2 + 168*beta12*f^2*k1^4*k2^2 + 240*beta13*f^2*k1^4*k2^2 + 126*beta6*f^2*k1^4*k2^2 + 392*beta7*f^2*k1^4*k2^2 - 120*beta8*f^2*k1^4*k2^2 - 532*beta7*C*f^2*k1^4*k2^2 + 140*b1*f*gr2*k1^4*k2^2 - 280*b1*C*f*gr2*k1^4*k2^2 + 112*f^2*gr2*k1^4*k2^2 - 224*C*f^2*gr2*k1^4*k2^2 + 840*b1*g2*gr2*k1^4*k2^2 + 560*f*g2*gr2*k1^4*k2^2 - 490*b1*beta6*f*K*k1^4*k2^2 - 266*beta6*f^2*K*k1^4*k2^2 - 420*b1^2*gr2*K*k1^4*k2^2 - 280*b1*f*gr2*K*k1^4*k2^2 - 168*beta14*f*gr1*k1^5*k2^2 + 168*beta16*f*gr1*k1^5*k2^2 - 238*beta19*f*gr1*k1^5*k2^2 + 392*beta19*C*f*gr1*k1^5*k2^2 + 84*b1*beta10*f*k1^2*k2^4 - 560*b1*beta11*f*k1^2*k2^4 + 280*b1*beta12*f*k1^2*k2^4 + 784*b1*beta13*f*k1^2*k2^4 + 70*b1*beta6*f*k1^2*k2^4 + 140*b1*beta7*f*k1^2*k2^4 - 336*b1*beta8*f*k1^2*k2^4 + 112*b1*beta9*f*k1^2*k2^4 - 140*b1*beta7*C*f*k1^2*k2^4 + 48*beta10*f^2*k1^2*k2^4 - 280*beta11*f^2*k1^2*k2^4 + 112*beta12*f^2*k1^2*k2^4 + 504*beta13*f^2*k1^2*k2^4 + 35*beta6*f^2*k1^2*k2^4 + 70*beta7*f^2*k1^2*k2^4 - 216*beta8*f^2*k1^2*k2^4 + 72*beta9*f^2*k1^2*k2^4 - 70*beta7*C*f^2*k1^2*k2^4 + 210*b1^2*gr2*k1^2*k2^4 + 420*b1*f*gr2*k1^2*k2^4 + 140*b1^2*f*gr2*k1^2*k2^4 - 140*b1*C*f*gr2*k1^2*k2^4 + 476*f^2*gr2*k1^2*k2^4 + 168*b1*f^2*gr2*k1^2*k2^4 - 644*C*f^2*gr2*k1^2*k2^4 - 72*f^3*gr2*k1^2*k2^4 + 420*b1*g2*gr2*k1^2*k2^4 + 1120*f*g2*gr2*k1^2*k2^4 - 70*b1*beta6*f*K*k1^2*k2^4 - 35*beta6*f^2*K*k1^2*k2^4 - 210*b1^2*gr2*K*k1^2*k2^4 - 560*b1*f*gr2*K*k1^2*k2^4 - 112*beta14*f*gr1*k1^3*k2^4 - 308*beta15*f*gr1*k1^3*k2^4 + 336*beta16*f*gr1*k1^3*k2^4 + 648*beta17*f*gr1*k1^3*k2^4 - 216*beta18*f*gr1*k1^3*k2^4 - 266*beta19*f*gr1*k1^3*k2^4 + 308*beta19*C*f*gr1*k1^3*k2^4 + 168*b1*beta13*f*k2^6 + 168*b1*beta9*f*k2^6 + 72*beta13*f^2*k2^6 + 72*beta9*f^2*k2^6 + 70*b1*f*gr2*k2^6 + 84*f^2*gr2*k2^6 + 84*b1*f^2*gr2*k2^6 - 84*C*f^2*gr2*k2^6 - 108*f^3*gr2*k2^6 + 140*f*g2*gr2*k2^6 - 70*b1*f*gr2*K*k2^6 - 84*beta15*f*gr1*k1*k2^6 + 360*beta17*f*gr1*k1*k2^6 - 72*beta18*f*gr1*k1*k2^6 + 280*b1*beta14*gr1*k1^4*k2^2*k3 - 280*b1*beta16*gr1*k1^4*k2^2*k3 + 350*b1*beta19*gr1*k1^4*k2^2*k3 - 560*b1*beta19*C*gr1*k1^4*k2^2*k3 + 168*beta14*f*gr1*k1^4*k2^2*k3 - 168*beta16*f*gr1*k1^4*k2^2*k3 + 182*beta19*f*gr1*k1^4*k2^2*k3 - 280*beta19*C*f*gr1*k1^4*k2^2*k3 + 56*f*gr1^2*k1^5*k2^2*k3 - 112*C*f*gr1^2*k1^5*k2^2*k3 + 280*g2*gr1^2*k1^5*k2^2*k3 - 140*b1*gr1^2*K*k1^5*k2^2*k3 + 420*b1*beta15*gr1*k1^2*k2^4*k3 - 280*b1*beta16*gr1*k1^2*k2^4*k3 - 672*b1*beta17*gr1*k1^2*k2^4*k3 + 224*b1*beta18*gr1*k1^2*k2^4*k3 + 140*b1*beta19*gr1*k1^2*k2^4*k3 - 140*b1*beta19*C*gr1*k1^2*k2^4*k3 + 196*beta15*f*gr1*k1^2*k2^4*k3 - 112*beta16*f*gr1*k1^2*k2^4*k3 - 432*beta17*f*gr1*k1^2*k2^4*k3 + 144*beta18*f*gr1*k1^2*k2^4*k3 + 70*beta19*f*gr1*k1^2*k2^4*k3 - 70*beta19*C*f*gr1*k1^2*k2^4*k3 + 140*b1*gr1^2*k1^3*k2^4*k3 + 196*f*gr1^2*k1^3*k2^4*k3 + 112*b1*f*gr1^2*k1^3*k2^4*k3 - 238*C*f*gr1^2*k1^3*k2^4*k3 - 36*f^2*gr1^2*k1^3*k2^4*k3 + 420*g2*gr1^2*k1^3*k2^4*k3 - 210*b1*gr1^2*K*k1^3*k2^4*k3 - 168*b1*beta17*gr1*k2^6*k3 - 72*beta17*f*gr1*k2^6*k3 - 36*f^2*gr1^2*k1*k2^6*k3 - 280*b1^2*beta10*k1^4*k3^2 + 420*b1^2*beta7*k1^4*k3^2 - 840*b1^2*beta7*C*k1^4*k3^2 + 72*beta10*f^2*k1^4*k3^2 - 84*beta7*f^2*k1^4*k3^2 + 168*beta7*C*f^2*k1^4*k3^2 - 420*b1^2*beta6*K*k1^4*k3^2 + 84*beta6*f^2*K*k1^4*k3^2 + 140*b1^2*beta10*k1^2*k2^2*k3^2 - 840*b1^2*beta11*k1^2*k2^2*k3^2 + 840*b1^2*beta12*k1^2*k2^2*k3^2 + 560*b1^2*beta13*k1^2*k2^2*k3^2 + 210*b1^2*beta6*k1^2*k2^2*k3^2 + 420*b1^2*beta7*k1^2*k2^2*k3^2 - 280*b1^2*beta8*k1^2*k2^2*k3^2 - 420*b1^2*beta7*C*k1^2*k2^2*k3^2 - 98*b1*beta10*f*k1^2*k2^2*k3^2 - 280*b1*beta11*f*k1^2*k2^2*k3^2 + 560*b1*beta12*f*k1^2*k2^2*k3^2 + 336*b1*beta13*f*k1^2*k2^2*k3^2 - 70*b1*beta6*f*k1^2*k2^2*k3^2 - 140*b1*beta7*f*k1^2*k2^2*k3^2 - 168*b1*beta8*f*k1^2*k2^2*k3^2 + 140*b1*beta7*C*f*k1^2*k2^2*k3^2 - 144*beta10*f^2*k1^2*k2^2*k3^2 + 168*beta12*f^2*k1^2*k2^2*k3^2 - 84*beta6*f^2*k1^2*k2^2*k3^2 - 140*beta7*f^2*k1^2*k2^2*k3^2 + 112*beta7*C*f^2*k1^2*k2^2*k3^2 + 420*b1*b2*gr2*k1^2*k2^2*k3^2 + 280*b2*f*gr2*k1^2*k2^2*k3^2 - 112*f^2*gr2*k1^2*k2^2*k3^2 + 224*C*f^2*gr2*k1^2*k2^2*k3^2 - 560*f*g2*gr2*k1^2*k2^2*k3^2 - 210*b1^2*beta6*K*k1^2*k2^2*k3^2 + 70*b1*beta6*f*K*k1^2*k2^2*k3^2 + 56*beta6*f^2*K*k1^2*k2^2*k3^2 + 280*b1*f*gr2*K*k1^2*k2^2*k3^2 - 280*b1*beta14*gr1*k1^3*k2^2*k3^2 + 280*b1*beta16*gr1*k1^3*k2^2*k3^2 - 210*b1*beta19*gr1*k1^3*k2^2*k3^2 + 280*b1*beta19*C*gr1*k1^3*k2^2*k3^2 + 168*beta14*f*gr1*k1^3*k2^2*k3^2 - 168*beta16*f*gr1*k1^3*k2^2*k3^2 + 154*beta19*f*gr1*k1^3*k2^2*k3^2 - 224*beta19*C*f*gr1*k1^3*k2^2*k3^2 + 280*b1^2*beta13*k2^4*k3^2 + 280*b1^2*beta9*k2^4*k3^2 + 280*b1*beta12*f*k2^4*k3^2 + 112*b1*beta13*f*k2^4*k3^2 + 112*b1*beta9*f*k2^4*k3^2 + 112*beta12*f^2*k2^4*k3^2 + 210*b1^2*gr2*k2^4*k3^2 + 140*b1^2*f*gr2*k2^4*k3^2 + 140*b2*f*gr2*k2^4*k3^2 - 140*b1*C*f*gr2*k2^4*k3^2 - 168*f^2*gr2*k2^4*k3^2 - 168*b1*f^2*gr2*k2^4*k3^2 + 168*C*f^2*gr2*k2^4*k3^2 + 420*b1*g2*gr2*k2^4*k3^2 - 280*f*g2*gr2*k2^4*k3^2 - 210*b1^2*gr2*K*k2^4*k3^2 + 140*b1*f*gr2*K*k2^4*k3^2 - 140*b1*beta15*gr1*k1*k2^4*k3^2 + 336*b1*beta17*gr1*k1*k2^4*k3^2 - 112*b1*beta18*gr1*k1*k2^4*k3^2 + 336*beta14*f*gr1*k1*k2^4*k3^2 - 112*beta16*f*gr1*k1*k2^4*k3^2 + 42*beta19*f*gr1*k1*k2^4*k3^2 - 280*b1*beta14*gr1*k1^2*k2^2*k3^3 + 280*b1*beta16*gr1*k1^2*k2^2*k3^3 - 210*b1*beta19*gr1*k1^2*k2^2*k3^3 + 280*b1*beta19*C*gr1*k1^2*k2^2*k3^3 - 168*beta14*f*gr1*k1^2*k2^2*k3^3 + 168*beta16*f*gr1*k1^2*k2^2*k3^3 - 98*beta19*f*gr1*k1^2*k2^2*k3^3 + 112*beta19*C*f*gr1*k1^2*k2^2*k3^3 + 140*b2*gr1^2*k1^3*k2^2*k3^3 - 56*f*gr1^2*k1^3*k2^2*k3^3 + 112*C*f*gr1^2*k1^3*k2^2*k3^3 - 280*g2*gr1^2*k1^3*k2^2*k3^3 + 140*b1*gr1^2*K*k1^3*k2^2*k3^3 - 280*b1*beta14*gr1*k2^4*k3^3 - 112*beta14*f*gr1*k2^4*k3^3 - 70*b1*gr1^2*k1*k2^4*k3^3 - 42*f*gr1^2*k1*k2^4*k3^3 - 56*b1*f*gr1^2*k1*k2^4*k3^3 + 280*b1^2*beta10*k1^2*k3^4 - 420*b1^2*beta7*k1^2*k3^4 + 840*b1^2*beta7*C*k1^2*k3^4 + 112*b1*beta10*f*k1^2*k3^4 - 140*b1*beta7*f*k1^2*k3^4 + 280*b1*beta7*C*f*k1^2*k3^4 + 420*b1^2*beta6*K*k1^2*k3^4 + 140*b1*beta6*f*K*k1^2*k3^4 + 840*b1^2*beta12*k2^2*k3^4 + 280*b1*beta12*f*k2^2*k3^4 + 420*b1*b2*gr2*k2^2*k3^4 - 140*b1*f*gr2*k2^2*k3^4 + 280*b1*C*f*gr2*k2^2*k3^4 - 840*b1*g2*gr2*k2^2*k3^4 + 420*b1^2*gr2*K*k2^2*k3^4 + 280*b1*beta14*gr1*k1*k2^2*k3^4 - 280*b1*beta16*gr1*k1*k2^2*k3^4 + 70*b1*beta19*gr1*k1*k2^2*k3^4 + 2*(-35*b1^2*((-2*beta10 + 6*beta7*(-1 + C) + 3*beta6*(-1 + K))*k1^2*k2^2*k3^2 + 3*gr2*(-1 + K)*k2^4*(k1^2 + k3^2)) - 6*beta10*f^2*k1^2*(4*k1^4 - 5*k2^4 + 16*k2^2*k3^2 - k1^2*(k2^2 + 4*k3^2)) - k2^2*(-28*f^2*gr2*k1^4 + 56*C*f^2*gr2*k1^4 + 91*beta19*f*gr1*k1^5 - 140*beta19*C*f*gr1*k1^5 + 112*beta11*f^2*k1^2*k2^2 - 28*beta12*f^2*k1^2*k2^2 - 168*beta13*f^2*k1^2*k2^2 + 72*beta8*f^2*k1^2*k2^2 - 24*beta9*f^2*k1^2*k2^2 - 210*f^2*gr2*k1^2*k2^2 + 252*C*f^2*gr2*k1^2*k2^2 + 24*f^3*gr2*k1^2*k2^2 - 420*f*g2*gr2*k1^2*k2^2 + 28*beta14*f*gr1*k1^3*k2^2 + 98*beta15*f*gr1*k1^3*k2^2 - 84*beta16*f*gr1*k1^3*k2^2 - 216*beta17*f*gr1*k1^3*k2^2 + 72*beta18*f*gr1*k1^3*k2^2 + 147*beta19*f*gr1*k1^3*k2^2 - 168*beta19*C*f*gr1*k1^3*k2^2 - 24*beta13*f^2*k2^4 - 24*beta9*f^2*k2^4 - 42*f^2*gr2*k2^4 + 42*C*f^2*gr2*k2^4 + 36*f^3*gr2*k2^4 - 70*f*g2*gr2*k2^4 + 42*beta15*f*gr1*k1*k2^4 - 120*beta17*f*gr1*k1*k2^4 + 24*beta18*f*gr1*k1*k2^4 - 77*beta19*f*gr1*k1^4*k3 + 112*beta19*C*f*gr1*k1^4*k3 - 14*f*gr1^2*k1^5*k3 + 28*C*f*gr1^2*k1^5*k3 - 70*beta15*f*gr1*k1^2*k2^2*k3 + 28*beta16*f*gr1*k1^2*k2^2*k3 + 144*beta17*f*gr1*k1^2*k2^2*k3 - 48*beta18*f*gr1*k1^2*k2^2*k3 - 42*beta19*f*gr1*k1^2*k2^2*k3 + 42*beta19*C*f*gr1*k1^2*k2^2*k3 - 105*f*gr1^2*k1^3*k2^2*k3 + 126*C*f*gr1^2*k1^3*k2^2*k3 + 12*f^2*gr1^2*k1^3*k2^2*k3 - 210*g2*gr1^2*k1^3*k2^2*k3 + 24*beta17*f*gr1*k2^4*k3 + 12*f^2*gr1^2*k1*k2^4*k3 + 28*f^2*gr2*k1^2*k3^2 - 56*C*f^2*gr2*k1^2*k3^2 - 49*beta19*f*gr1*k1^3*k3^2 + 56*beta19*C*f*gr1*k1^3*k3^2 - 28*beta12*f^2*k2^2*k3^2 + 42*f^2*gr2*k2^2*k3^2 - 84*beta14*f*gr1*k1*k2^2*k3^2 + 28*beta16*f*gr1*k1*k2^2*k3^2 - 21*beta19*f*gr1*k1*k2^2*k3^2 + 35*beta19*f*gr1*k1^2*k3^3 - 28*beta19*C*f*gr1*k1^2*k3^3 + 14*f*gr1^2*k1^3*k3^3 - 28*C*f*gr1^2*k1^3*k3^3 + 28*beta14*f*gr1*k2^2*k3^3 + 21*f*gr1^2*k1*k2^2*k3^3 + 14*beta7*f^2*k1^2*((-13 + 17*C)*k1^2 + 3*(-1 + C)*k2^2 - 2*(-2 + C)*k3^2) + 7*beta6*f^2*k1^2*((-9 + 17*K)*k1^2 + 3*(-1 + K)*k2^2 - 2*(-3 + K)*k3^2)) - 7*b1*(2*beta10*f*k1^2*(2*k1^4 - 3*k1^2*k2^2 - 3*k2^4 + 9*k2^2*k3^2 - 2*k3^4) + k2^2*(20*beta11*f*k1^2*k2^2 - 28*beta13*f*k1^2*k2^2 + 12*beta8*f*k1^2*k2^2 - 4*beta9*f*k1^2*k2^2 - 30*f*gr2*k1^2*k2^2 + 10*C*f*gr2*k1^2*k2^2 - 6*f^2*gr2*k1^2*k2^2 - 30*g2*gr2*k1^2*k2^2 + 30*f*gr2*K*k1^2*k2^2 - 5*f*gr2*k2^4 + 5*f*gr2*K*k2^4 - 15*beta19*gr1*k1^4*k3 + 20*beta19*C*gr1*k1^4*k3 - 10*beta15*gr1*k1^2*k2^2*k3 + 24*beta17*gr1*k1^2*k2^2*k3 - 8*beta18*gr1*k1^2*k2^2*k3 - 10*beta19*gr1*k1^2*k2^2*k3 + 10*beta19*C*gr1*k1^2*k2^2*k3 - 10*gr1^2*k1^3*k2^2*k3 - 4*f*gr1^2*k1^3*k2^2*k3 + 15*gr1^2*K*k1^3*k2^2*k3 + 15*beta19*gr1*k1^3*k3^2 - 20*beta19*C*gr1*k1^3*k3^2 - 4*beta13*f*k2^2*k3^2 - 4*beta9*f*k2^2*k3^2 + 10*C*f*gr2*k2^2*k3^2 + 6*f^2*gr2*k2^2*k3^2 - 30*g2*gr2*k2^2*k3^2 + 10*beta15*gr1*k1*k2^2*k3^2 - 12*beta17*gr1*k1*k2^2*k3^2 + 4*beta18*gr1*k1*k2^2*k3^2 + 5*beta19*gr1*k1^2*k3^3 + 5*gr1^2*k1*k2^2*k3^3 + 2*f*gr1^2*k1*k2^2*k3^3 - 5*beta19*gr1*k1*k3^4 + 10*beta7*f*k1^2*((-4 + 5*C)*k1^2 + (-1 + C)*k2^2 + C*k3^2) + 5*beta6*f*k1^2*((-3 + 5*K)*k1^2 + (-1 + K)*k2^2 + (1 + K)*k3^2))))*Cos[2*theta] - k1*k2*(k2^2*(35*b1*(4*beta7*(-1 + C)*f*k1^2 + 2*beta6*f*(-1 + K)*k1^2 - 2*f*gr2*k2^2 + 2*f*gr2*K*k2^2 - 2*beta19*gr1*k1^2*k3 + 2*beta19*C*gr1*k1^2*k3 - gr1^2*k1*k2^2*k3 + gr1^2*K*k1*k2^2*k3 + 2*beta19*gr1*k1*k3^2 - 2*beta19*C*gr1*k1*k3^2) + 2*(-42*f^2*gr2*k1^2 + 56*C*f^2*gr2*k1^2 + 63*beta19*f*gr1*k1^3 - 77*beta19*C*f*gr1*k1^3 + 14*beta11*f^2*k2^2 - 24*beta13*f^2*k2^2 + 6*beta8*f^2*k2^2 - 12*beta9*f^2*k2^2 - 42*f^2*gr2*k2^2 + 42*C*f^2*gr2*k2^2 + 12*f^3*gr2*k2^2 - 70*f*g2*gr2*k2^2 + 28*beta15*f*gr1*k1*k2^2 - 60*beta17*f*gr1*k1*k2^2 + 18*beta18*f*gr1*k1*k2^2 + 21*beta19*f*gr1*k1*k2^2 - 21*beta19*C*f*gr1*k1*k2^2 - 42*beta19*f*gr1*k1^2*k3 + 49*beta19*C*f*gr1*k1^2*k3 - 21*f*gr1^2*k1^3*k3 + 28*C*f*gr1^2*k1^3*k3 - 14*beta15*f*gr1*k2^2*k3 + 24*beta17*f*gr1*k2^2*k3 - 6*beta18*f*gr1*k2^2*k3 - 21*f*gr1^2*k1*k2^2*k3 + 21*C*f*gr1^2*k1*k2^2*k3 + 6*f^2*gr1^2*k1*k2^2*k3 - 35*g2*gr1^2*k1*k2^2*k3 + 14*f^2*gr2*k3^2 - 14*beta19*f*gr1*k1*k3^2 + 7*beta19*f*gr1*k3^3 + 7*f*gr1^2*k1*k3^3 + 7*beta7*f^2*((-9 + 10*C)*k1^2 + k3^2) + 7*beta6*f^2*((-4 + 5*K)*k1^2 + k3^2))) + 2*beta10*f*(14*b1*(2*k3^4 + k1^2*(-3*k2^2 + 2*k3^2)) + 3*f*(4*k1^4 + 8*k2^2*k3^2 + k1^2*(-11*k2^2 + 4*k3^2))))*Cos[3*theta] + 14*b1*beta10*f*k1^4*k2^2*Cos[4*theta] + 12*beta10*f^2*k1^4*k2^2*Cos[4*theta] + 12*beta10*f^2*k1^2*k2^4*Cos[4*theta] + 7*beta6*f^2*k1^2*k2^4*Cos[4*theta] + 14*beta7*f^2*k1^2*k2^4*Cos[4*theta] - 14*beta7*C*f^2*k1^2*k2^4*Cos[4*theta] + 28*f^2*gr2*k1^2*k2^4*Cos[4*theta] - 28*C*f^2*gr2*k1^2*k2^4*Cos[4*theta] - 7*beta6*f^2*K*k1^2*k2^4*Cos[4*theta] - 28*beta19*f*gr1*k1^3*k2^4*Cos[4*theta] + 28*beta19*C*f*gr1*k1^3*k2^4*Cos[4*theta] + 14*beta19*f*gr1*k1^2*k2^4*k3*Cos[4*theta] - 14*beta19*C*f*gr1*k1^2*k2^4*k3*Cos[4*theta] + 14*f*gr1^2*k1^3*k2^4*k3*Cos[4*theta] - 14*C*f*gr1^2*k1^3*k2^4*k3*Cos[4*theta] + 14*b1*beta10*f*k1^2*k2^2*k3^2*Cos[4*theta] - 24*beta10*f^2*k1^2*k2^2*k3^2*Cos[4*theta] + 6*beta10*f^2*k1^3*k2^3*Cos[5*theta])))\/(420*k1^3*k2^2*k3^4)"