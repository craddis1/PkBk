"((I\/420)*D1^4*Pk1*Pk3*(-((21*b1^2*k3*(gr1*k1*k2^2*(4*(5 + 3*f - 15*K)*k1^3 + 3*(5 + 4*f - 5*K)*k1*k2^2 - 4*(5 + 3*f - 10*K)*k1^2*k3 - 4*(5 + 3*f - 5*K)*k1*k3^2 + 4*(5 + 3*f)*k3^3) + 2*k3*(4*k2^2*(-5*beta15*k1^2 + 5*beta16*k1^2 + 9*beta17*k1^2 - 3*beta18*k1^2 + 3*beta17*k2^2 + 5*beta14*k3^2) + 5*beta19*k1^2*((-2 + 4*C)*k1^2 + 3*(-1 + C)*k2^2 + 2*(1 - 2*C)*k3^2))) + 2*f*(9*beta19*f*k1^2*(10*(-1 + 2*C)*k1^4 + 14*(-1 + C)*k2^4 + (25 - 18*C)*k2^2*k3^2 + k1^2*((-72 + 97*C)*k2^2 + 10*(1 - 2*C)*k3^2)) + k2^2*(540*beta16*f*k1^4 + 420*beta17*f*k1^4 - 140*beta18*f*k1^4 - 378*f*gr1*k1^5 + 612*C*f*gr1*k1^5 - 1008*g2*gr1*k1^5 + 162*beta16*f*k1^2*k2^2 + 1200*beta17*f*k1^2*k2^2 - 360*beta18*f*k1^2*k2^2 - 468*f*gr1*k1^3*k2^2 + 540*C*f*gr1*k1^3*k2^2 + 180*f^2*gr1*k1^3*k2^2 - 798*g2*gr1*k1^3*k2^2 + 120*beta17*f*k2^4 + 60*f^2*gr1*k1*k2^4 - 90*beta15*f*k1^2*(2*k1^2 + 5*k2^2) + 297*f*gr1*k1^4*k3 - 450*C*f*gr1*k1^4*k3 + 756*g2*gr1*k1^4*k3 + 126*f*gr1*k1^2*k2^2*k3 - 126*C*f*gr1*k1^2*k2^2*k3 - 120*f^2*gr1*k1^2*k2^2*k3 + 189*g2*gr1*k1^2*k2^2*k3 - 360*beta16*f*k1^2*k3^2 - 252*b2*gr1*k1^3*k3^2 + 234*f*gr1*k1^3*k3^2 - 324*C*f*gr1*k1^3*k3^2 + 504*g2*gr1*k1^3*k3^2 + 72*f*gr1*k1*k2^2*k3^2 + 126*b2*gr1*k1^2*k3^3 - 153*f*gr1*k1^2*k3^3 + 162*C*f*gr1*k1^2*k3^3 - 252*g2*gr1*k1^2*k3^3 - 18*beta14*f*(20*k1^4 - 30*k1^2*k3^2 - 9*k2^2*k3^2))) + 3*b1*(14*beta19*f*k1^2*(6*(-1 + 2*C)*k1^4 + (-45 + 61*C)*k1^2*k2^2 + 9*(-1 + C)*k2^4 + (7 - 3*C)*k2^2*k3^2 + 6*(1 - 2*C)*k3^4) + k2^2*(504*beta16*f*k1^4 + 360*beta17*f*k1^4 - 120*beta18*f*k1^4 - 84*f*gr1*k1^5 - 60*f^2*gr1*k1^5 + 336*f*gr1*K*k1^5 + 168*beta16*f*k1^2*k2^2 + 1080*beta17*f*k1^2*k2^2 - 324*beta18*f*k1^2*k2^2 - 196*f*gr1*k1^3*k2^2 - 162*f^2*gr1*k1^3*k2^2 + 266*f*gr1*K*k1^3*k2^2 + 120*beta17*f*k2^4 + 378*f*gr1*k1^4*k3 - 448*C*f*gr1*k1^4*k3 + 60*f^2*gr1*k1^4*k3 + 840*g2*gr1*k1^4*k3 - 252*f*gr1*K*k1^4*k3 + 189*f*gr1*k1^2*k2^2*k3 - 126*C*f*gr1*k1^2*k2^2*k3 - 54*f^2*gr1*k1^2*k2^2*k3 + 210*g2*gr1*k1^2*k2^2*k3 - 63*f*gr1*K*k1^2*k2^2*k3 - 168*beta16*f*k1^2*k3^2 + 360*beta17*f*k1^2*k3^2 - 120*beta18*f*k1^2*k3^2 - 126*f*gr1*k1^3*k3^2 + 280*C*f*gr1*k1^3*k3^2 + 60*f^2*gr1*k1^3*k3^2 - 560*g2*gr1*k1^3*k3^2 - 168*f*gr1*K*k1^3*k3^2 + 108*beta17*f*k2^2*k3^2 + 70*f*gr1*k1*k2^2*k3^2 + 108*f^2*gr1*k1*k2^2*k3^2 + 140*b2*gr1*k1^2*k3^3 - 238*f*gr1*k1^2*k3^3 + 168*C*f*gr1*k1^2*k3^3 - 60*f^2*gr1*k1^2*k3^3 - 280*g2*gr1*k1^2*k3^3 + 84*f*gr1*K*k1^2*k3^3 + 70*f*gr1*k1*k3^4 - 56*beta15*f*k1^2*(3*k1^2 + 8*k2^2 + 3*k3^2) - 168*beta14*f*(2*k1^4 - 3*k1^2*k3^2 - k3^2*(k2^2 + k3^2)))))*Cos[theta]) + k2*(-2*k1*(21*b1^2*k3*(gr1*k2^2*((10 + 4*f - 15*K)*k1^2 + (-5 - 2*f + 5*K)*k1*k3 - (5 + 2*f)*k3^2) + k3*(-2*(5*beta15 - 6*beta17 + 2*beta18)*k2^2 + 5*beta19*((-3 + 4*C)*k1^2 + k3^2))) + 3*b1*(-98*beta15*f*k1^2*k2^2 + 84*beta16*f*k1^2*k2^2 + 216*beta17*f*k1^2*k2^2 - 72*beta18*f*k1^2*k2^2 - 63*f*gr1*k1^3*k2^2 - 36*f^2*gr1*k1^3*k2^2 + 119*f*gr1*K*k1^3*k2^2 - 42*beta15*f*k2^4 + 120*beta17*f*k2^4 - 24*beta18*f*k2^4 - 21*f*gr1*k1*k2^4 - 12*f^2*gr1*k1*k2^4 + 21*f*gr1*K*k1*k2^4 + 14*f*gr1*k1^4*k3 - 28*C*f*gr1*k1^4*k3 + 147*f*gr1*k1^2*k2^2*k3 - 126*C*f*gr1*k1^2*k2^2*k3 + 12*f^2*gr1*k1^2*k2^2*k3 + 210*g2*gr1*k1^2*k2^2*k3 - 63*f*gr1*K*k1^2*k2^2*k3 - 12*f^2*gr1*k2^4*k3 - 14*f*gr1*k1^3*k3^2 + 28*C*f*gr1*k1^3*k3^2 - 42*beta15*f*k2^2*k3^2 - 28*beta16*f*k2^2*k3^2 + 72*beta17*f*k2^2*k3^2 - 24*beta18*f*k2^2*k3^2 + 42*C*f*gr1*k1*k2^2*k3^2 + 36*f^2*gr1*k1*k2^2*k3^2 - 70*g2*gr1*k1*k2^2*k3^2 - 14*f*gr1*K*k1*k2^2*k3^2 - 14*f*gr1*k1^2*k3^3 + 28*C*f*gr1*k1^2*k3^3 - 42*f*gr1*k2^2*k3^3 - 12*f^2*gr1*k2^2*k3^3 + 14*f*gr1*k1*k3^4 - 28*C*f*gr1*k1*k3^4 - 28*beta14*f*k2^2*(k1^2 - 3*k3^2) + 7*beta19*f*((-13 + 20*C)*k1^4 + 3*k3^2*(k2^2 + k3^2) + k1^2*(3*(-7 + 8*C)*k2^2 + 2*(-1 + 2*C)*k3^2))) + f*(2*f^2*gr1*k2^2*(15*k1^3 + 48*k1*k2^2 - 15*k1^2*k3 - 16*k2^2*k3) - 42*gr1*k1*k2^2*(b2*k3^2 + g2*(17*k1^2 + 3*k2^2 - 9*k1*k3 - 2*k3^2)) + 9*beta19*f*((-23 + 36*C)*k1^4 + 5*k2^2*k3^2 + k1^2*(5*(-7 + 8*C)*k2^2 + (13 - 16*C)*k3^2)) + f*(-2*k2^2*(117*beta15*k1^2 - 108*beta16*k1^2 - 270*beta17*k1^2 + 90*beta18*k1^2 + 45*beta15*k2^2 - 160*beta17*k2^2 + 32*beta18*k2^2 + 36*beta16*k3^2 + 36*beta14*(k1^2 - 3*k3^2)) + 9*gr1*((-4 + 8*C)*k1^5 + (4 - 8*C)*k1^4*k3 - 5*k2^2*k3^3 + 2*k1*k2^2*(5*(-1 + C)*k2^2 + (7 - 4*C)*k3^2) + k1^3*((-44 + 58*C)*k2^2 + 4*(1 - 2*C)*k3^2) + k1^2*(-5*(-5 + 6*C)*k2^2*k3 + 4*(-1 + 2*C)*k3^3)))))*Cos[2*theta] - k2*(105*b1^2*k1^2*k3*(-(gr1*(-1 + K)*k2^2) + 2*beta19*(-1 + C)*k3) + 3*b1*(-56*beta15*f*k1^2*k2^2 + 120*beta17*f*k1^2*k2^2 - 36*beta18*f*k1^2*k2^2 - 56*f*gr1*k1^3*k2^2 - 18*f^2*gr1*k1^3*k2^2 + 70*f*gr1*K*k1^3*k2^2 + 42*f*gr1*k1^4*k3 - 56*C*f*gr1*k1^4*k3 + 63*f*gr1*k1^2*k2^2*k3 - 42*C*f*gr1*k1^2*k2^2*k3 - 6*f^2*gr1*k1^2*k2^2*k3 + 70*g2*gr1*k1^2*k2^2*k3 - 21*f*gr1*K*k1^2*k2^2*k3 - 42*f*gr1*k1^3*k3^2 + 56*C*f*gr1*k1^3*k3^2 + 12*beta17*f*k2^2*k3^2 + 14*f*gr1*k1*k2^2*k3^2 + 12*f^2*gr1*k1*k2^2*k3^2 - 14*f*gr1*k1^2*k3^3 + 14*f*gr1*k1*k3^4 + 14*beta19*f*k1^2*((-9 + 11*C)*k1^2 + 3*(-1 + C)*k2^2 + (-1 + 3*C)*k3^2)) + f*(42*g2*gr1*k1^2*k2^2*(-10*k1 + 3*k3) + 20*f^2*gr1*k1*k2^2*(3*k1^2 + k2^2 - 2*k1*k3) + 4*f*k2^2*(-45*beta15*k1^2 + 9*beta16*k1^2 + 100*beta17*k1^2 - 30*beta18*k1^2 + 10*beta17*k2^2 + 9*beta14*k3^2) + 9*beta19*f*k1^2*((-36 + 46*C)*k1^2 + 11*(-1 + C)*k2^2 + 2*(5 - 2*C)*k3^2) + 9*f*gr1*k1*(8*(-2 + 3*C)*k1^4 + 2*(7 - 10*C)*k1^3*k3 + 4*k2^2*k3^2 + k1^2*((-34 + 38*C)*k2^2 - 8*(-1 + C)*k3^2) + k1*(-11*(-1 + C)*k2^2*k3 + 2*(-3 + 2*C)*k3^3))))*Cos[3*theta] + k1*(504*b1*beta14*f*k1^4 - 504*b1*beta16*f*k1^4 + 714*b1*beta19*f*k1^4 - 1176*b1*beta19*C*f*k1^4 + 360*beta14*f^2*k1^4 - 360*beta16*f^2*k1^4 + 486*beta19*f^2*k1^4 - 792*beta19*C*f^2*k1^4 + 108*f^2*gr1*k1^5 - 216*C*f^2*gr1*k1^5 + 504*f*g2*gr1*k1^5 - 252*b1*f*gr1*K*k1^5 + 336*b1*beta14*f*k1^2*k2^2 + 924*b1*beta15*f*k1^2*k2^2 - 1008*b1*beta16*f*k1^2*k2^2 - 1944*b1*beta17*f*k1^2*k2^2 + 648*b1*beta18*f*k1^2*k2^2 + 798*b1*beta19*f*k1^2*k2^2 - 924*b1*beta19*C*f*k1^2*k2^2 + 216*beta14*f^2*k1^2*k2^2 + 612*beta15*f^2*k1^2*k2^2 - 648*beta16*f^2*k1^2*k2^2 - 1440*beta17*f^2*k1^2*k2^2 + 480*beta18*f^2*k1^2*k2^2 + 531*beta19*f^2*k1^2*k2^2 - 612*beta19*C*f^2*k1^2*k2^2 + 378*b1*f*gr1*k1^3*k2^2 + 738*f^2*gr1*k1^3*k2^2 + 324*b1*f^2*gr1*k1^3*k2^2 - 1008*C*f^2*gr1*k1^3*k2^2 - 80*f^3*gr1*k1^3*k2^2 + 1596*f*g2*gr1*k1^3*k2^2 - 798*b1*f*gr1*K*k1^3*k2^2 + 252*b1*beta15*f*k2^4 - 1080*b1*beta17*f*k2^4 + 216*b1*beta18*f*k2^4 + 162*beta15*f^2*k2^4 - 720*beta17*f^2*k2^4 + 144*beta18*f^2*k2^4 + 105*b1*f*gr1*k1*k2^4 + 144*f^2*gr1*k1*k2^4 + 108*b1*f^2*gr1*k1*k2^4 - 144*C*f^2*gr1*k1*k2^4 - 216*f^3*gr1*k1*k2^4 + 210*f*g2*gr1*k1*k2^4 - 105*b1*f*gr1*K*k1*k2^4 - 168*b1*f*gr1*k1^4*k3 + 336*b1*C*f*gr1*k1^4*k3 - 108*f^2*gr1*k1^4*k3 + 216*C*f^2*gr1*k1^4*k3 - 840*b1*g2*gr1*k1^4*k3 - 504*f*g2*gr1*k1^4*k3 + 420*b1^2*gr1*K*k1^4*k3 + 252*b1*f*gr1*K*k1^4*k3 - 420*b1^2*gr1*k1^2*k2^2*k3 - 840*b1*f*gr1*k1^2*k2^2*k3 - 336*b1^2*f*gr1*k1^2*k2^2*k3 + 714*b1*C*f*gr1*k1^2*k2^2*k3 - 387*f^2*gr1*k1^2*k2^2*k3 - 108*b1*f^2*gr1*k1^2*k2^2*k3 + 468*C*f^2*gr1*k1^2*k2^2*k3 + 80*f^3*gr1*k1^2*k2^2*k3 - 1260*b1*g2*gr1*k1^2*k2^2*k3 - 756*f*g2*gr1*k1^2*k2^2*k3 + 630*b1^2*gr1*K*k1^2*k2^2*k3 + 378*b1*f*gr1*K*k1^2*k2^2*k3 + 108*b1*f^2*gr1*k2^4*k3 + 72*f^3*gr1*k2^4*k3 + 840*b1^2*beta14*k1^2*k3^2 - 840*b1^2*beta16*k1^2*k3^2 + 630*b1^2*beta19*k1^2*k3^2 - 840*b1^2*beta19*C*k1^2*k3^2 - 84*b1*beta19*f*k1^2*k3^2 + 168*b1*beta19*C*f*k1^2*k3^2 - 360*beta14*f^2*k1^2*k3^2 + 360*beta16*f^2*k1^2*k3^2 - 306*beta19*f^2*k1^2*k3^2 + 432*beta19*C*f^2*k1^2*k3^2 + 168*b1*f*gr1*k1^3*k3^2 + 252*b2*f*gr1*k1^3*k3^2 - 336*b1*C*f*gr1*k1^3*k3^2 - 108*f^2*gr1*k1^3*k3^2 + 216*C*f^2*gr1*k1^3*k3^2 + 840*b1*g2*gr1*k1^3*k3^2 - 504*f*g2*gr1*k1^3*k3^2 - 420*b1^2*gr1*K*k1^3*k3^2 + 252*b1*f*gr1*K*k1^3*k3^2 + 420*b1^2*beta15*k2^2*k3^2 - 1008*b1^2*beta17*k2^2*k3^2 + 336*b1^2*beta18*k2^2*k3^2 - 1008*b1*beta14*f*k2^2*k3^2 + 252*b1*beta15*f*k2^2*k3^2 + 336*b1*beta16*f*k2^2*k3^2 - 648*b1*beta17*f*k2^2*k3^2 + 216*b1*beta18*f*k2^2*k3^2 - 126*b1*beta19*f*k2^2*k3^2 - 648*beta14*f^2*k2^2*k3^2 + 216*beta16*f^2*k2^2*k3^2 - 81*beta19*f^2*k2^2*k3^2 + 210*b1^2*gr1*k1*k2^2*k3^2 - 42*b1*f*gr1*k1*k2^2*k3^2 + 168*b1^2*f*gr1*k1*k2^2*k3^2 + 168*b2*f*gr1*k1*k2^2*k3^2 - 210*b1*C*f*gr1*k1*k2^2*k3^2 - 270*f^2*gr1*k1*k2^2*k3^2 - 324*b1*f^2*gr1*k1*k2^2*k3^2 + 216*C*f^2*gr1*k1*k2^2*k3^2 + 420*b1*g2*gr1*k1*k2^2*k3^2 - 336*f*g2*gr1*k1*k2^2*k3^2 - 210*b1^2*gr1*K*k1*k2^2*k3^2 + 168*b1*f*gr1*K*k1*k2^2*k3^2 - 420*b1*b2*gr1*k1^2*k3^3 + 168*b1*f*gr1*k1^2*k3^3 - 252*b2*f*gr1*k1^2*k3^3 - 336*b1*C*f*gr1*k1^2*k3^3 + 108*f^2*gr1*k1^2*k3^3 - 216*C*f^2*gr1*k1^2*k3^3 + 840*b1*g2*gr1*k1^2*k3^3 + 504*f*g2*gr1*k1^2*k3^3 - 420*b1^2*gr1*K*k1^2*k3^3 - 252*b1*f*gr1*K*k1^2*k3^3 + 210*b1^2*gr1*k2^2*k3^3 + 252*b1*f*gr1*k2^2*k3^3 + 168*b1^2*f*gr1*k2^2*k3^3 + 81*f^2*gr1*k2^2*k3^3 + 108*b1*f^2*gr1*k2^2*k3^3 - 840*b1^2*beta14*k3^4 + 840*b1^2*beta16*k3^4 - 210*b1^2*beta19*k3^4 - 504*b1*beta14*f*k3^4 + 504*b1*beta16*f*k3^4 - 126*b1*beta19*f*k3^4 + 420*b1*b2*gr1*k1*k3^4 - 168*b1*f*gr1*k1*k3^4 + 336*b1*C*f*gr1*k1*k3^4 - 840*b1*g2*gr1*k1*k3^4 + 420*b1^2*gr1*K*k1*k3^4 - f*k2^2*(-90*f*gr1*k1^3 + 108*C*f*gr1*k1^3 - 18*beta15*f*k2^2 + 40*beta17*f*k2^2 - 8*beta18*f*k2^2 - 36*f*gr1*k1*k2^2 + 36*C*f*gr1*k1*k2^2 + 12*f^2*gr1*k1*k2^2 - 42*g2*gr1*k1*k2^2 + 63*f*gr1*k1^2*k3 - 72*C*f*gr1*k1^2*k3 - 4*f^2*gr1*k2^2*k3 + 18*f*gr1*k1*k3^2 - 9*f*gr1*k3^3 + 21*b1*k1*(4*beta19*(-1 + C)*k1 + gr1*(-1 + K)*k2^2 - 2*(-1 + C)*gr1*(k1 - k3)*k3) + 9*beta19*f*((-11 + 12*C)*k1^2 + k3^2))*Cos[4*theta] - 9*(-1 + C)*f^2*k1*k2^3*(beta19 + 2*gr1*k1 - gr1*k3)*Cos[5*theta]))))\/(k1^2*k2*k3^4)"