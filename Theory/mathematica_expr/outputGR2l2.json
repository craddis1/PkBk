"(D1^4*Pk1*Pk3*(-2*f*k2^3*(-24*b1*beta10*k1^2*(k1^2 - k3^2) - 20*beta10*f*k1^2*(k1^2 - k3^2) + k2^2*(5*f^2*gr2*k2^2 + 2*gr1*k1*(-6*beta19*(-1 + C)*k1^2 - 5*beta17*k2^2 + 6*(-1 + C)*gr1*k1^2*k3) + 6*f*gr2*((-7 + 8*C)*k1^2 + k3^2)))*Cos[theta]^5 + 4*f*k1*k2^4*(6*b1*beta10*k1^2 + 5*beta10*f*k1^2 - 6*(-1 + C)*f*gr2*k2^2)*Cos[theta]^6 + 2*k1*k2^2*Cos[theta]^4*(14*b1^2*beta10*k1^2*k3^2 + b1*(-14*beta7*(-1 + C)*f*k1^2*k2^2 + 14*f*gr2*k1^2*k2^2 - 14*C*f*gr2*k1^2*k2^2 - 7*beta6*f*(-1 + K)*k1^2*k2^2 + 12*beta13*f*k2^4 + 12*beta9*f*k2^4 + 7*f*gr2*k2^4 + 6*f^2*gr2*k2^4 - 7*f*gr2*K*k2^4 + 14*beta19*gr1*k1^2*k2^2*k3 - 14*beta19*C*gr1*k1^2*k2^2*k3 - 12*beta17*gr1*k2^4*k3 - 24*beta10*f*k1^2*k3^2 + 14*f*gr2*k2^2*k3^2 - 14*C*f*gr2*k2^2*k3^2) - f*(12*beta7*(-1 + C)*f*k1^2*k2^2 - 66*f*gr2*k1^2*k2^2 + 84*C*f*gr2*k1^2*k2^2 + 6*beta6*f*(-1 + K)*k1^2*k2^2 + 42*beta19*gr1*k1^3*k2^2 - 48*beta19*C*gr1*k1^3*k2^2 - 10*beta13*f*k2^4 - 10*beta9*f*k2^4 + 15*f^2*gr2*k2^4 - 14*g2*gr2*k2^4 + 12*beta15*gr1*k1*k2^4 - 50*beta17*gr1*k1*k2^4 + 10*beta18*gr1*k1*k2^4 - 12*beta19*gr1*k1^2*k2^2*k3 + 12*beta19*C*gr1*k1^2*k2^2*k3 - 30*gr1^2*k1^3*k2^2*k3 + 36*C*gr1^2*k1^3*k2^2*k3 + 10*beta17*gr1*k2^4*k3 + 5*f*gr1^2*k1*k2^4*k3 + 30*beta10*f*k1^2*k3^2 + 18*f*gr2*k2^2*k3^2 - 12*C*f*gr2*k2^2*k3^2 - 6*beta19*gr1*k1*k2^2*k3^2 + 6*gr1^2*k1*k2^2*k3^3) + 6*f*k2^2*(b1*beta10*k1^2 + beta10*f*k1^2 - (-1 + C)*f*gr2*k2^2)*Sin[theta]) - k1*Cos[theta]^2*(2*(10*beta10*f^2*k1^4*(k1^2 - k3^2) + k2^2*(-12*f^2*gr2*k1^4 + 24*C*f^2*gr2*k1^4 + 30*beta19*f*gr1*k1^5 - 48*beta19*C*f*gr1*k1^5 + 36*beta11*f^2*k1^2*k2^2 - 12*beta12*f^2*k1^2*k2^2 - 70*beta13*f^2*k1^2*k2^2 + 30*beta8*f^2*k1^2*k2^2 - 10*beta9*f^2*k1^2*k2^2 + 10*f^3*gr2*k1^2*k2^2 - 98*f*g2*gr2*k1^2*k2^2 + 12*beta14*f*gr1*k1^3*k2^2 + 36*beta15*f*gr1*k1^3*k2^2 - 36*beta16*f*gr1*k1^3*k2^2 - 90*beta17*f*gr1*k1^3*k2^2 + 30*beta18*f*gr1*k1^3*k2^2 - 24*beta19*f*gr1*k1^4*k3 + 36*beta19*C*f*gr1*k1^4*k3 - 6*f*gr1^2*k1^5*k3 + 12*C*f*gr1^2*k1^5*k3 - 24*beta15*f*gr1*k1^2*k2^2*k3 + 12*beta16*f*gr1*k1^2*k2^2*k3 + 60*beta17*f*gr1*k1^2*k2^2*k3 - 20*beta18*f*gr1*k1^2*k2^2*k3 + 5*f^2*gr1^2*k1^3*k2^2*k3 - 42*g2*gr1^2*k1^3*k2^2*k3 + 12*f^2*gr2*k1^2*k3^2 - 24*C*f^2*gr2*k1^2*k3^2 - 18*beta19*f*gr1*k1^3*k3^2 + 24*beta19*C*f*gr1*k1^3*k3^2 - 12*beta12*f^2*k2^2*k3^2 - 7*b2*f*gr2*k2^2*k3^2 + 14*f*g2*gr2*k2^2*k3^2 - 36*beta14*f*gr1*k1*k2^2*k3^2 + 12*beta16*f*gr1*k1*k2^2*k3^2 + 12*beta19*f*gr1*k1^2*k3^3 - 12*beta19*C*f*gr1*k1^2*k3^3 + 6*f*gr1^2*k1^3*k3^3 - 12*C*f*gr1^2*k1^3*k3^3 + 12*beta14*f*gr1*k2^2*k3^3 + 6*beta7*f^2*k1^2*(3*(-3 + 4*C)*k1^2 + (3 - 2*C)*k3^2) + 6*beta6*f^2*k1^2*((-3 + 6*K)*k1^2 - (-2 + K)*k3^2)) + b1*(12*beta10*f*k1^2*(k1^4 - k3^4) + k2^2*(-7*f*gr2*k1^4 + 14*C*f*gr2*k1^4 + 42*beta11*f*k1^2*k2^2 - 14*beta12*f*k1^2*k2^2 - 84*beta13*f*k1^2*k2^2 + 36*beta8*f*k1^2*k2^2 - 12*beta9*f*k1^2*k2^2 - 28*f*gr2*k1^2*k2^2 - 18*f^2*gr2*k1^2*k2^2 + 49*f*gr2*K*k1^2*k2^2 - 28*beta19*gr1*k1^4*k3 + 42*beta19*C*gr1*k1^4*k3 - 28*beta15*gr1*k1^2*k2^2*k3 + 14*beta16*gr1*k1^2*k2^2*k3 + 72*beta17*gr1*k1^2*k2^2*k3 - 24*beta18*gr1*k1^2*k2^2*k3 - 14*gr1^2*k1^3*k2^2*k3 - 12*f*gr1^2*k1^3*k2^2*k3 + 21*gr1^2*K*k1^3*k2^2*k3 + 21*beta19*gr1*k1^3*k3^2 - 28*beta19*C*gr1*k1^3*k3^2 - 14*beta12*f*k2^2*k3^2 - 12*beta13*f*k2^2*k3^2 - 12*beta9*f*k2^2*k3^2 + 14*f*gr2*k2^2*k3^2 + 18*f^2*gr2*k2^2*k3^2 - 7*f*gr2*K*k2^2*k3^2 + 14*beta15*gr1*k1*k2^2*k3^2 - 36*beta17*gr1*k1*k2^2*k3^2 + 12*beta18*gr1*k1*k2^2*k3^2 + 14*beta19*gr1*k1^2*k3^3 - 14*beta19*C*gr1*k1^2*k3^3 + 14*beta14*gr1*k2^2*k3^3 + 7*gr1^2*k1*k2^2*k3^3 + 6*f*gr1^2*k1*k2^2*k3^3 + 7*f*gr2*k3^4 - 14*C*f*gr2*k3^4 - 7*beta19*gr1*k1*k3^4 + 7*beta7*f*k1^2*(3*(-3 + 4*C)*k1^2 + k3^2) + 7*beta6*f*k1^2*((-3 + 6*K)*k1^2 + k3^2))) - 7*b1^2*(f*gr2*k2^4*(k1^2 + k3^2) + 2*k3^2*((beta13 + beta9)*k2^4 + beta10*(-k1^4 + k1^2*k3^2)))) + k2^2*(14*b1^2*beta10*k1^2*k3^2 + 10*b1*beta10*f*k1^2*(k1^2 + k3^2) + 2*beta10*f^2*k1^2*(5*k1^2 + 6*k3^2) - b1*k2^2*(14*beta7*(-1 + C)*f*k1^2 - 14*f*gr2*k1^2 + 14*C*f*gr2*k1^2 + 7*beta6*f*(-1 + K)*k1^2 + 12*beta13*f*k2^2 + 12*beta9*f*k2^2 - 7*f*gr2*k2^2 + 6*f^2*gr2*k2^2 + 7*f*gr2*K*k2^2 - 14*beta19*gr1*k1^2*k3 + 14*beta19*C*gr1*k1^2*k3 - 12*beta17*gr1*k2^2*k3 - 14*f*gr2*k3^2 + 14*C*f*gr2*k3^2) + f*k2^2*(2*beta7*(-1 + C)*f*k1^2 - 28*f*gr2*k1^2 + 40*C*f*gr2*k1^2 + beta6*f*(-1 + K)*k1^2 + 13*beta19*gr1*k1^3 - 16*beta19*C*gr1*k1^3 - 12*beta13*f*k2^2 - 12*beta9*f*k2^2 + 18*f^2*gr2*k2^2 + 14*g2*gr2*k2^2 + 6*beta15*gr1*k1*k2^2 - 60*beta17*gr1*k1*k2^2 + 12*beta18*gr1*k1*k2^2 - 2*beta19*gr1*k1^2*k3 + 2*beta19*C*gr1*k1^2*k3 - 11*gr1^2*k1^3*k3 + 14*C*gr1^2*k1^3*k3 + 12*beta17*gr1*k2^2*k3 + 6*f*gr1^2*k1*k2^2*k3 + 12*f*gr2*k3^2 - 12*C*f*gr2*k3^2 - 3*beta19*gr1*k1*k3^2 + 3*gr1^2*k1*k3^3))*Sin[theta]) - 2*k2*Cos[theta]^3*(20*beta10*f^2*k1^6 + 28*b1^2*beta10*k1^2*k3^4 + 2*k1*k2^2*(-24*f^2*gr2*k1^3 + 36*C*f^2*gr2*k1^3 + 27*beta19*f*gr1*k1^4 - 36*beta19*C*f*gr1*k1^4 + 6*beta11*f^2*k1*k2^2 - 20*beta13*f^2*k1*k2^2 + 5*beta8*f^2*k1*k2^2 - 10*beta9*f^2*k1*k2^2 + 10*f^3*gr2*k1*k2^2 - 28*f*g2*gr2*k1*k2^2 + 18*beta15*f*gr1*k1^2*k2^2 - 6*beta16*f*gr1*k1^2*k2^2 - 50*beta17*f*gr1*k1^2*k2^2 + 15*beta18*f*gr1*k1^2*k2^2 - 15*beta19*f*gr1*k1^3*k3 + 18*beta19*C*f*gr1*k1^3*k3 - 12*f*gr1^2*k1^4*k3 + 18*C*f*gr1^2*k1^4*k3 - 6*beta15*f*gr1*k1*k2^2*k3 + 20*beta17*f*gr1*k1*k2^2*k3 - 5*beta18*f*gr1*k1*k2^2*k3 + 5*f^2*gr1^2*k1^2*k2^2*k3 - 7*g2*gr1^2*k1^2*k2^2*k3 + 12*f^2*gr2*k1*k3^2 - 12*C*f^2*gr2*k1*k3^2 - 9*beta19*f*gr1*k1^2*k3^2 + 6*beta19*C*f*gr1*k1^2*k3^2 - 6*beta14*f*gr1*k2^2*k3^2 + 3*beta19*f*gr1*k1*k3^3 + 6*f*gr1^2*k1^2*k3^3 - 6*C*f*gr1^2*k1^2*k3^3 + 3*beta7*f^2*k1*((-7 + 8*C)*k1^2 + k3^2) + 3*beta6*f^2*k1*((-3 + 4*K)*k1^2 + k3^2)) + b1*(24*beta10*f*k1^2*(k1^4 + k3^4) + k2^2*(-21*f*gr2*k1^4 + 28*C*f*gr2*k1^4 + 14*beta11*f*k1^2*k2^2 - 48*beta13*f*k1^2*k2^2 + 12*beta8*f*k1^2*k2^2 - 24*beta9*f*k1^2*k2^2 - 21*f*gr2*k1^2*k2^2 - 12*f^2*gr2*k1^2*k2^2 + 28*f*gr2*K*k1^2*k2^2 - 35*beta19*gr1*k1^4*k3 + 42*beta19*C*gr1*k1^4*k3 - 14*beta15*gr1*k1^2*k2^2*k3 + 48*beta17*gr1*k1^2*k2^2*k3 - 12*beta18*gr1*k1^2*k2^2*k3 - 7*gr1^2*k1^3*k2^2*k3 - 6*f*gr1^2*k1^3*k2^2*k3 + 7*gr1^2*K*k1^3*k2^2*k3 - 14*f*gr2*k1^2*k3^2 + 28*C*f*gr2*k1^2*k3^2 + 14*beta19*gr1*k1^3*k3^2 - 14*beta19*C*gr1*k1^3*k3^2 + 7*f*gr2*k2^2*k3^2 + 12*f^2*gr2*k2^2*k3^2 - 12*beta17*gr1*k1*k2^2*k3^2 + 7*beta19*gr1*k1^2*k3^3 + 7*f*gr2*k3^4 + 7*beta7*f*k1^2*((-7 + 8*C)*k1^2 + k3^2) + 7*beta6*f*k1^2*((-3 + 4*K)*k1^2 + k3^2))) + f*k2^2*(-6*b1*beta10*k1^2*(k1^2 - 2*k3^2) - 6*beta10*f*k1^2*(k1^2 - 2*k3^2) + k2^2*(5*f^2*gr2*k2^2 + gr1*k1*(-3*beta19*(-1 + C)*k1^2 - 10*beta17*k2^2 + 3*(-1 + C)*gr1*k1^2*k3) + 3*f*gr2*((-5 + 6*C)*k1^2 + k3^2)))*Sin[theta]) + k2*Cos[theta]*(2*(k1^2*(-6*beta19*f*gr1*k1^5 + 12*beta19*C*f*gr1*k1^5 - 36*beta11*f^2*k1^2*k2^2 + 24*beta12*f^2*k1^2*k2^2 + 60*beta13*f^2*k1^2*k2^2 - 30*beta8*f^2*k1^2*k2^2 + 84*f*g2*gr2*k1^2*k2^2 - 24*beta14*f*gr1*k1^3*k2^2 - 12*beta15*f*gr1*k1^3*k2^2 + 36*beta16*f*gr1*k1^3*k2^2 + 30*beta17*f*gr1*k1^3*k2^2 - 10*beta18*f*gr1*k1^3*k2^2 + 6*beta19*f*gr1*k1^4*k3 - 12*beta19*C*f*gr1*k1^4*k3 + 12*beta14*f*gr1*k1^2*k2^2*k3 + 12*beta15*f*gr1*k1^2*k2^2*k3 - 24*beta16*f*gr1*k1^2*k2^2*k3 - 30*beta17*f*gr1*k1^2*k2^2*k3 + 10*beta18*f*gr1*k1^2*k2^2*k3 + 42*g2*gr1^2*k1^3*k2^2*k3 + 6*beta19*f*gr1*k1^3*k3^2 - 12*beta19*C*f*gr1*k1^3*k3^2 + 24*beta12*f^2*k2^2*k3^2 + 14*b2*f*gr2*k2^2*k3^2 - 28*f*g2*gr2*k2^2*k3^2 + 36*beta14*f*gr1*k1*k2^2*k3^2 - 24*beta16*f*gr1*k1*k2^2*k3^2 - 6*beta19*f*gr1*k1^2*k3^3 + 12*beta19*C*f*gr1*k1^2*k3^3 - 24*beta14*f*gr1*k2^2*k3^3 + 12*beta16*f*gr1*k2^2*k3^3 + 7*b2*gr1^2*k1*k2^2*k3^3 - 14*g2*gr1^2*k1*k2^2*k3^3 - 6*beta7*f^2*k1^2*((-5 + 8*C)*k1^2 + (3 - 4*C)*k3^2) - 6*beta6*f^2*k1^2*((-1 + 4*K)*k1^2 + (1 - 2*K)*k3^2)) + 7*b1^2*k2^2*(2*(2*beta13 - beta8)*k1^2*k3^2 + f*gr2*(k1^4 - k3^4)) + b1*k1*(-42*beta11*f*k1^3*k2^2 + 28*beta12*f*k1^3*k2^2 + 72*beta13*f*k1^3*k2^2 - 36*beta8*f*k1^3*k2^2 + 14*f*gr2*k1^3*k2^2 + 12*f^2*gr2*k1^3*k2^2 - 42*f*gr2*K*k1^3*k2^2 + 7*beta19*gr1*k1^5*k3 - 14*beta19*C*gr1*k1^5*k3 + 14*beta14*gr1*k1^3*k2^2*k3 + 14*beta15*gr1*k1^3*k2^2*k3 - 28*beta16*gr1*k1^3*k2^2*k3 - 36*beta17*gr1*k1^3*k2^2*k3 + 12*beta18*gr1*k1^3*k2^2*k3 + 7*gr1^2*k1^4*k2^2*k3 + 6*f*gr1^2*k1^4*k2^2*k3 - 21*gr1^2*K*k1^4*k2^2*k3 - 7*beta19*gr1*k1^4*k3^2 + 14*beta19*C*gr1*k1^4*k3^2 - 14*beta11*f*k1*k2^2*k3^2 + 28*beta12*f*k1*k2^2*k3^2 + 24*beta13*f*k1*k2^2*k3^2 - 12*beta8*f*k1*k2^2*k3^2 - 14*f*gr2*k1*k2^2*k3^2 - 12*f^2*gr2*k1*k2^2*k3^2 + 14*f*gr2*K*k1*k2^2*k3^2 - 14*beta15*gr1*k1^2*k2^2*k3^2 + 14*beta16*gr1*k1^2*k2^2*k3^2 + 36*beta17*gr1*k1^2*k2^2*k3^2 - 12*beta18*gr1*k1^2*k2^2*k3^2 - 7*beta19*gr1*k1^3*k3^3 + 14*beta19*C*gr1*k1^3*k3^3 - 28*beta14*gr1*k1*k2^2*k3^3 + 14*beta16*gr1*k1*k2^2*k3^3 - 7*gr1^2*k1^2*k2^2*k3^3 - 6*f*gr1^2*k1^2*k2^2*k3^3 + 7*gr1^2*K*k1^2*k2^2*k3^3 + 7*beta19*gr1*k1^2*k3^4 - 14*beta19*C*gr1*k1^2*k3^4 + 14*beta14*gr1*k2^2*k3^4 - 7*beta7*f*k1*((-5 + 8*C)*k1^4 + k3^4) - 7*beta6*f*k1*((-1 + 4*K)*k1^4 + k3^4))) + (28*b1^2*beta10*k1^2*k3^4 + b1*(-21*f*gr2*k1^4*k2^2 + 28*C*f*gr2*k1^4*k2^2 + 24*beta13*f*k1^2*k2^4 - 6*beta8*f*k1^2*k2^4 - 7*f*gr2*k1^2*k2^4 + 6*f^2*gr2*k1^2*k2^4 - 21*beta19*gr1*k1^4*k2^2*k3 + 28*beta19*C*gr1*k1^4*k2^2*k3 - 24*beta17*gr1*k1^2*k2^4*k3 + 6*beta18*gr1*k1^2*k2^4*k3 + 3*f*gr1^2*k1^3*k2^4*k3 + 8*beta10*f*k1^4*k3^2 + 28*C*f*gr2*k1^2*k2^2*k3^2 + 7*f*gr2*k2^4*k3^2 - 6*f^2*gr2*k2^4*k3^2 + 6*beta17*gr1*k1*k2^4*k3^2 + 7*beta19*gr1*k1^2*k2^2*k3^3 - 4*beta10*f*k1^2*k3^4 + 7*f*gr2*k2^2*k3^4 + 7*beta6*f*k1^2*k2^2*(-k1^2 + k3^2) + 7*beta7*f*k1^2*k2^2*((-3 + 4*C)*k1^2 + k3^2)) - f*k1*(20*C*f*gr2*k1^3*k2^2 + 9*beta19*gr1*k1^4*k2^2 + 2*beta11*f*k1*k2^4 - 24*beta13*f*k1*k2^4 + 6*beta8*f*k1*k2^4 + 28*g2*gr2*k1*k2^4 - 6*beta16*gr1*k1^2*k2^4 - 60*beta17*gr1*k1^2*k2^4 - 3*beta19*gr1*k1^3*k2^2*k3 + 4*beta19*C*gr1*k1^3*k2^2*k3 - 6*gr1^2*k1^4*k2^2*k3 + 24*beta17*gr1*k1*k2^4*k3 - 6*beta18*gr1*k1*k2^4*k3 + 6*f*gr1^2*k1^2*k2^4*k3 - 8*beta10*f*k1^3*k3^2 + 8*f*gr2*k1*k2^2*k3^2 - 5*beta19*gr1*k1^2*k2^2*k3^2 + 6*beta19*C*gr1*k1^2*k2^2*k3^2 - 6*beta14*gr1*k2^4*k3^2 + beta19*gr1*k1*k2^2*k3^3 + 4*gr1^2*k1^2*k2^2*k3^3 - 6*C*gr1^2*k1^2*k2^2*k3^3 + beta7*f*k1*k2^2*((-3 + 4*C)*k1^2 + k3^2) + beta6*f*k1*k2^2*((-1 + 2*K)*k1^2 + k3^2)))*Sin[theta] + 6*f*k2^2*(4*C*f*gr2*k1^2*k2^2 + (4*b1*beta10*k1^2 + f*gr2*k2^2)*k3^2)*Sin[theta]^2) - k1*(-14*b1*beta7*f*k1^6 + 28*b1*beta7*C*f*k1^6 - 12*beta7*f^2*k1^6 + 24*beta7*C*f^2*k1^6 + 14*b1*beta6*f*K*k1^6 + 12*beta6*f^2*K*k1^6 + 28*b1*beta11*f*k1^4*k2^2 - 28*b1*beta12*f*k1^4*k2^2 - 48*b1*beta13*f*k1^4*k2^2 + 24*b1*beta8*f*k1^4*k2^2 + 24*beta11*f^2*k1^4*k2^2 - 24*beta12*f^2*k1^4*k2^2 - 40*beta13*f^2*k1^4*k2^2 + 20*beta8*f^2*k1^4*k2^2 - 56*f*g2*gr2*k1^4*k2^2 + 28*b1*f*gr2*K*k1^4*k2^2 + 24*beta14*f*gr1*k1^5*k2^2 - 24*beta16*f*gr1*k1^5*k2^2 - 28*b1*beta14*gr1*k1^4*k2^2*k3 + 28*b1*beta16*gr1*k1^4*k2^2*k3 - 24*beta14*f*gr1*k1^4*k2^2*k3 + 24*beta16*f*gr1*k1^4*k2^2*k3 - 28*g2*gr1^2*k1^5*k2^2*k3 + 14*b1*gr1^2*K*k1^5*k2^2*k3 + 12*beta7*f^2*k1^4*k3^2 - 24*beta7*C*f^2*k1^4*k3^2 - 12*beta6*f^2*K*k1^4*k3^2 - 56*b1^2*beta13*k1^2*k2^2*k3^2 + 28*b1^2*beta8*k1^2*k2^2*k3^2 + 28*b1*beta11*f*k1^2*k2^2*k3^2 - 56*b1*beta12*f*k1^2*k2^2*k3^2 - 48*b1*beta13*f*k1^2*k2^2*k3^2 + 24*b1*beta8*f*k1^2*k2^2*k3^2 - 24*beta12*f^2*k1^2*k2^2*k3^2 - 28*b2*f*gr2*k1^2*k2^2*k3^2 + 56*f*g2*gr2*k1^2*k2^2*k3^2 - 28*b1*f*gr2*K*k1^2*k2^2*k3^2 + 28*b1*beta14*gr1*k1^3*k2^2*k3^2 - 28*b1*beta16*gr1*k1^3*k2^2*k3^2 - 24*beta14*f*gr1*k1^3*k2^2*k3^2 + 24*beta16*f*gr1*k1^3*k2^2*k3^2 + 28*b1*beta14*gr1*k1^2*k2^2*k3^3 - 28*b1*beta16*gr1*k1^2*k2^2*k3^3 + 24*beta14*f*gr1*k1^2*k2^2*k3^3 - 24*beta16*f*gr1*k1^2*k2^2*k3^3 - 14*b2*gr1^2*k1^3*k2^2*k3^3 + 28*g2*gr1^2*k1^3*k2^2*k3^3 - 14*b1*gr1^2*K*k1^3*k2^2*k3^3 + 14*b1*beta7*f*k1^2*k3^4 - 28*b1*beta7*C*f*k1^2*k3^4 - 14*b1*beta6*f*K*k1^2*k3^4 - 28*b1*beta12*f*k2^2*k3^4 - 28*b1*beta14*gr1*k1*k2^2*k3^4 + 28*b1*beta16*gr1*k1*k2^2*k3^4 + 6*k2^2*(b1*k2^4*(2*beta13*f + 2*beta9*f + f^2*gr2 - 2*beta17*gr1*k3) - (-1 + 2*C)*f^2*gr2*k2^2*(k1^2 - k3^2) + 2*b1*beta10*f*k1^2*(-k1^2 + k3^2))*Sin[theta]^2 + 6*b1*beta10*f*k1^5*k2*Sin[2*theta] + 6*beta10*f^2*k1^5*k2*Sin[2*theta] - 6*f^2*gr2*k1^3*k2^3*Sin[2*theta] - 7*b1*beta6*f*K*k1^3*k2^3*Sin[2*theta] - 7*beta19*C*f*gr1*k1^4*k2^3*Sin[2*theta] - 7*b1*beta11*f*k1*k2^5*Sin[2*theta] - 6*b1*beta9*f*k1*k2^5*Sin[2*theta] - 6*beta9*f^2*k1*k2^5*Sin[2*theta] + 6*f^3*gr2*k1*k2^5*Sin[2*theta] - 7*b1*f*gr2*K*k1*k2^5*Sin[2*theta] + 5*beta15*f*gr1*k1^2*k2^5*Sin[2*theta] + 9*beta18*f*gr1*k1^2*k2^5*Sin[2*theta] + 5*C*f*gr1^2*k1^4*k2^3*k3*Sin[2*theta] + 7*b1*beta15*gr1*k1*k2^5*k3*Sin[2*theta] - beta15*f*gr1*k1*k2^5*k3*Sin[2*theta] + 7*b1*f*gr2*k1*k2^3*k3^2*Sin[2*theta] - 6*C*f^2*gr2*k1*k2^3*k3^2*Sin[2*theta] + 3*b1*beta10*f*k1^2*k2^4*Sin[2*theta]^2 + 3*f^2*gr2*k2^6*Sin[2*theta]^2 - 3*C*f^2*gr2*k2^6*Sin[2*theta]^2 + Sin[theta]*(7*b1^2*(f*gr2*k2^4*(k1^2 + k3^2) + 2*k3^2*((beta13 + beta9)*k2^4 + beta10*(-k1^4 + k1^2*k3^2))) + b1*(2*beta10*f*k1^2*(k1^4 - k3^4) - k2^2*(7*beta7*(-1 + 2*C)*f*k1^2*(k1^2 - k3^2) + 3*f^2*gr2*k2^2*(k1^2 - k3^2) + gr1*k3*(7*beta19*(-1 + 2*C)*k1^2*(k1^2 - k3^2) + 2*k2^2*(-7*beta15*k1^2 + 7*beta16*k1^2 - 6*beta17*k1^2 + 2*beta18*k1^2 + 3*beta17*k1*k3 - beta18*k1*k3 + 7*beta14*k3^2)) + f*(7*beta6*K*k1^2*(k1^2 - k3^2) + 7*gr2*(k1^2 - k3^2)*((-1 + 2*C)*k1^2 + K*k2^2 + (-1 + 2*C)*k3^2) + k2^2*(14*beta11*k1^2 + 14*beta13*k1^2 - 6*beta8*k1^2 + 2*beta9*k1^2 + 2*gr1^2*k1^3*k3 + 2*beta13*k3^2 + 2*beta9*k3^2 - gr1^2*k1*k3^3 - 14*beta12*(k1^2 + k3^2))))) + f*(2*beta10*f*k1^4*(k1^2 - k3^2) + k2^2*(2*beta19*gr1*k1^5 - 4*beta19*C*gr1*k1^5 + 2*f^2*gr2*k1^2*k2^2 + 14*g2*gr2*k1^2*k2^2 + 2*beta14*gr1*k1^3*k2^2 + 4*beta15*gr1*k1^3*k2^2 - 6*beta16*gr1*k1^3*k2^2 - 18*beta17*gr1*k1^3*k2^2 + 6*beta18*gr1*k1^3*k2^2 - beta19*gr1*k1^4*k3 + 2*beta19*C*gr1*k1^4*k3 - gr1^2*k1^5*k3 + 2*C*gr1^2*k1^5*k3 - 2*beta15*gr1*k1^2*k2^2*k3 + 2*beta16*gr1*k1^2*k2^2*k3 + 12*beta17*gr1*k1^2*k2^2*k3 - 4*beta18*gr1*k1^2*k2^2*k3 - 2*beta19*gr1*k1^3*k3^2 + 4*beta19*C*gr1*k1^3*k3^2 + 7*b2*gr2*k2^2*k3^2 - 14*g2*gr2*k2^2*k3^2 - 6*beta14*gr1*k1*k2^2*k3^2 + 2*beta16*gr1*k1*k2^2*k3^2 + beta19*gr1*k1^2*k3^3 - 2*beta19*C*gr1*k1^2*k3^3 + gr1^2*k1^3*k3^3 - 2*C*gr1^2*k1^3*k3^3 + 2*beta14*gr1*k2^2*k3^3 + beta7*(-1 + 2*C)*f*k1^2*(k1^2 - k3^2) + f*(2*(-1 + 2*C)*gr2*k1^2*(k1^2 - k3^2) + beta6*K*k1^2*(k1^2 - k3^2) + k2^2*(2*beta11*k1^2 + k1^2*(-14*beta13 + 6*beta8 - 2*beta9 + gr1^2*k1*k3) - 2*beta12*(k1^2 + k3^2))))) + 9*f^2*gr2*k1*k2^5*Sin[2*theta]))))\/(21*k1^3*k2^2*k3^4)"